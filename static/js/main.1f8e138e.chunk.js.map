{"version":3,"sources":["Components/inputs/totalrun.js","Components/inputs/totalrise.js","Components/inputs/idealrun.js","Components/inputs/idealrise.js","Components/inputs/topstair.js","Components/inputs/details.js","Components/inputs/stairangle.js","Components/inputs/height.js","Components/inputs/floorthickness.js","Components/stair.js","Components/inputs/units.js","Components/inputs/dimensions.js","Components/inputs/detailsToggle.js","App.js","serviceWorker.js","index.js"],"names":["TotalRun","props","selectFeet","Array","from","length","v","k","selectInchesMin","className","units","parseInt","totalRunft","Fragment","id","defaultValue","onChange","changetotalRunft","i","value","key","changetotalRunin","totalRunfr","changetotalRunfr","e","totalRunin","parseFloat","totalRunmm","type","Math","round","min","max","changetotalRunmm","TotalRise","topStair","minRisein","totalRiseft","changetotalRiseft","totalRisein","changetotalRisein","totalRisefr","changetotalRisefr","totalRisemm","changetotalRisemm","IdealRun","selectInches","idealRunin","changeidealRunin","idealRunfr","changeidealRunfr","idealRunmm","changeidealRunmm","IdealRise","idealRisein","changeidealRisein","idealRisefr","changeidealRisefr","idealRisemm","changeidealRisemm","Topstair","onClick","changeTopStairOn","changeTopStairOff","Details","nosingFractionsMin","nosingFractionsMax","stringerInches","details","treadin","changetreadin","changetreadfr","treadmm","changetreadmm","riserin","changeriserin","changeriserfr","risermm","changerisermm","nosingin","changenosingin","nosingfr","changenosingfr","nosingmm","changenosingmm","stringerin","changestringerin","stringerfr","changestringerfr","stringermm","changestringermm","StairAngle","stairAngle","step","changeStairAngle","Height","totalRun","headroomMax","changeheadroomlength","FloorThickness","floorft","changefloorft","floorin","changefloorin","floorfr","changefloorfr","floormm","changefloormm","Stair","window","matchMedia","lgMin","totalRise","idealRun","idealRise","preTreadThickness","treadfr","preRiserThickness","riserfr","count","totalBoolean","lengthH","headroomLength","stringerTotal","treadTotal","riserTotal","nosingTotal","stringerA","sin","atan","stringerB","coordinates","floorThickness","preStairAngle","idealBoolean","stairToggle","tan","PI","push","headroomPts","console","log","headroomTrue","windowWidth","matches","innerWidth","windowHeight","innerHeight","stairLength","wr","abs","ratio","m","n","slice","moveCenter","move","treadThickness","riserThickness","nosing","treadLength","riserHeight","treadsX","treadsY","risersY","j","treadsW","h","treadsX2","r","treadsY2","t","detailCount","topTread","topStairLine","topStairLanding","arrowWidth","arrowOffset","textLineOffset","textNumOffset","textSize","strokeWidth","strokeDash","dRise","dRiseArrowTop","dRiseArrowBot","dRiseText","dRiseDashedTop","dRiseDashedBot","dRiseFeet","floor","dRiseInches","dRiseFraction","dRiseMM","dRiseValue","dRun","dRunArrowLeft","dRunArrowRight","dRunText","dRunDashedLeft","dRunDashedRight","dRunFeet","dRunInches","dRunFraction","dRunMM","dRunValue","sZ","sA","sAlpha","sC","sqrt","sX","sY","stringerTrue","dStringer","cos","dStringerValue","dNosing","dNosingDashedLeft","dNosingDashedRight","dNosingText","dNosingValue","dHeadroomStepX","dHeadroomStepY","p","dHeadroomDashed","headroomBoolean","dHeadroom","dHeadroomArrowTop","dHeadroomArrowBot","dHeadroomText","dHeadroomValue","toFixed","dHeadroomFeet","dHeadroomInches","dHeadroomFraction","dHeadroomValueText","dFloor","dFloorArrowTop","dFloorArrowBot","dFloorText","dFloorDashedTop","dFloorDashedBot","dFloorValue","dAngleStart","dAngle","dAngleText","dStep","runCount","idealRunParsedIn","idealRunParsedFr","idealRunParsedMM","idealRiseParsedIn","idealRiseParsedFr","idealRiseParsedMM","riseCountValue","runCountValue","errors","ePosition","eHeadroomText","eHeadroomColor","withNosing","eRunText","eAngleText","eAngleColor","eRiseText","eMessage","width","height","x","y","fill","stroke","points","lineCap","lineJoin","closed","dimensions","fontFamily","fontSize","text","align","map","_","dash","rotation","Units","unitsTrue","changeUnitsIn","changeUnitsMM","Dimensions","dimensionsTrue","changeDimensionsOn","changeDimensionsOff","DetailsToggle","detailsTrue","changeDetailsOn","changeDetailsOff","App","state","runOn","idealOn","event","setState","target","this","changetotalRunSwitchOn","changetotalRunSwitchOff","riseCount","headroomDelta","Component","Boolean","location","hostname","match","WebFont","load","custom","families","active","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wTAsEeA,G,YApEE,SAACC,GAEd,IAAIC,EAAaC,MAAMC,KAAK,CAACC,OAAO,KAAQ,SAACC,EAAEC,GAAH,OAAOA,EAAE,KAGjDC,EAAkBL,MAAMC,KAAK,CAACC,OAAO,IAAO,SAACC,EAAEC,GAAH,OAAOA,EAAE,MAKzD,OACI,6BACI,2BAAOE,UAAU,mBAAjB,aACA,yBAAKA,UAAU,gCACdR,EAAMS,MAC4B,KAA/BC,SAASV,EAAMW,YACX,kBAAC,IAAMC,SAAP,KACI,4BAAQC,GAAG,eAAeC,aAAcd,EAAMW,WAAYI,SAAUf,EAAMgB,iBAAkBR,UAAU,2BACjGN,MAAMC,KAAKF,GAAY,SAACgB,GACrB,OAAS,4BAAQC,MAAS,GAAFD,EAAME,IAAO,GAAFF,GAAOA,EAAG,SAGrD,4BAAQJ,GAAG,iBAAiBC,aAAc,GAAIC,SAAUf,EAAMoB,iBAAkBZ,UAAU,2BACrFN,MAAMC,KAAKI,GAAiB,SAACU,GAC1B,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQJ,GAAG,mBAAmBC,aAAcd,EAAMqB,WAAYN,SAAUf,EAAMsB,iBAAkBd,UAAU,+BACrGN,MAAMC,KAAKD,MAxBd,KAwBsC,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAMtE,kBAAC,IAAML,SAAP,KACI,4BAAQC,GAAG,eAAeC,aAAcd,EAAMW,WAAYI,SAAUf,EAAMgB,iBAAkBR,UAAU,2BACjGN,MAAMC,KAAKF,GAAY,SAACgB,GACrB,OAAS,4BAAQC,MAAS,GAAFD,EAAME,IAAO,GAAFF,GAAOA,EAAG,SAGrD,4BAAQJ,GAAG,iBAAiBC,aAAcd,EAAMwB,WAAYT,SAAUf,EAAMoB,iBAAkBZ,UAAU,2BACnGN,MAAMC,KAAKD,MAvCjB,KAuCsC,SAACqB,EAAGN,GACjC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQJ,GAAG,mBAAmBC,aAAcd,EAAMqB,WAAYN,SAAUf,EAAMsB,iBAAkBd,UAAU,+BACrGN,MAAMC,KAAKD,MA3Cd,KA2CsC,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAO1EQ,WAAWzB,EAAM0B,aAAe,OAASD,WAAWzB,EAAM0B,aAAe,UACrE,2BAAOC,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAM0B,YAAaI,IAjDvE,MAiDiFC,IAhDjF,UAgD2FhB,SAAUf,EAAMgC,iBAAkBxB,UAAU,0BAGjI,2BAAOmB,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAM0B,YAAaI,IApDvE,MAoDiFC,IAnDjF,UAmD2FhB,SAAUf,EAAMgC,iBAAkBxB,UAAU,mCC4BtIyB,EAvFG,SAACjC,GAEf,IAAIC,EAAaD,EAAMkC,SAAWhC,MAAMC,KAAK,CAACC,OAAO,KAAQ,SAACC,EAAEC,GAAH,OAAOA,KAAKJ,MAAMC,KAAK,CAACC,OAAO,KAAQ,SAACC,EAAEC,GAAH,OAAOA,EAAE,KAOzG6B,EAAYnC,EAAMkC,SAAW,EAAI,EAErC,OACI,6BACI,2BAAO1B,UAAU,mBAAjB,cACA,yBAAKA,UAAU,gCACdR,EAAMS,MACHT,EAAMkC,UAC8B,IAAhCxB,SAASV,EAAMoC,aACX,kBAAC,IAAMxB,SAAP,KACI,4BAAQC,GAAG,cAAcC,aAAcd,EAAMoC,YAAarB,SAAUf,EAAMqC,kBAAmB7B,UAAU,2BAClGN,MAAMC,KAAKF,GAAY,SAACgB,GACrB,OAAS,4BAAQC,MAAS,GAAFD,EAAME,IAAO,GAAFF,GAAOA,EAAG,SAGrD,4BAAQJ,GAAG,cAAcC,aAAcd,EAAMsC,YAAavB,SAAUf,EAAMuC,kBAAmB/B,UAAU,2BACnG,4BAAQU,MAAOiB,EAAWhB,IAAKgB,GAAYA,EAAW,MAE1D,4BAAQtB,GAAG,cAAcC,aAAcd,EAAMwC,YAAazB,SAAUf,EAAMyC,kBAAmBjC,UAAU,+BAClGN,MAAMC,KAAKD,MAxBlB,KAwB0C,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YA0B1E,kBAAC,IAAML,SAAP,KACI,4BAAQC,GAAG,cAAcC,aAAcd,EAAMoC,YAAarB,SAAUf,EAAMqC,kBAAmB7B,UAAU,2BAClGN,MAAMC,KAAKF,GAAY,SAACgB,GACrB,OAAS,4BAAQC,MAAS,GAAFD,EAAME,IAAO,GAAFF,GAAOA,EAAG,SAGrD,4BAAQJ,GAAG,cAAcC,aAAcd,EAAMsC,YAAavB,SAAUf,EAAMuC,kBAAmB/B,UAAU,2BACtGN,MAAMC,KAAKD,MA3Db,KA2DkC,SAACqB,EAAGN,GACzB,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAGnD,4BAAQJ,GAAG,cAAcC,aAAcd,EAAMwC,YAAazB,SAAUf,EAAMyC,kBAAmBjC,UAAU,+BAClGN,MAAMC,KAAKD,MA/Dd,KA+DsC,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAO1EQ,WAAWzB,EAAM0C,cAAgB,OAASjB,WAAWzB,EAAM0C,cAAgB,UACvE,2BAAOf,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAM0C,aAAcZ,IAtEtE,MAsEkFC,IArElF,UAqE8FhB,SAAUf,EAAM2C,kBAAmBnC,UAAU,0BAGvI,2BAAOmB,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAM0C,aAAcZ,IAzEtE,MAyEkFC,IAxElF,UAwE8FhB,SAAUf,EAAM2C,kBAAmBnC,UAAU,kCCxC5IoC,EAvCE,SAAC5C,GAEd,IAAI6C,EAAe3C,MAAMC,KAAK,CAACC,OAAO,KAAS,SAACC,EAAEC,GAAH,OAAOA,EAAE,MAMxD,OACI,6BACI,2BAAOE,UAAU,mBAAjB,aACA,yBAAKA,UAAU,gCACVR,EAAMS,MACH,kBAAC,IAAMG,SAAP,KACI,4BAAQM,MAAOlB,EAAM8C,WAAY/B,SAAUf,EAAM+C,iBAAkBvC,UAAU,2BACxEN,MAAMC,KAAK0C,GAAc,SAAC5B,GACvB,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQC,MAAOlB,EAAMgD,WAAYjC,SAAUf,EAAMiD,iBAAkBzC,UAAU,+BACxEN,MAAMC,KAAKD,MAjBd,KAiBsC,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAMtEQ,WAAWzB,EAAMkD,aAAe,KAAOzB,WAAWzB,EAAMkD,aAAgB,SACpE,2BAAOvB,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMkD,YAAapB,IAvBtE,IAuBqFC,IAtBrF,QAAqB,KAsB+EhB,SAAUf,EAAMmD,iBAAkB3C,UAAU,0BAG3I,2BAAOmB,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMkD,YAAapB,IA1BtE,IA0BqFC,IAzBrF,QAAqB,KAyB+EhB,SAAUf,EAAMmD,iBAAkB3C,UAAU,kCCSpJ4C,EAxCG,SAACpD,GAEf,IAAI6C,EAAe3C,MAAMC,KAAK,CAACC,OAAO,IAAO,SAACC,EAAEC,GAAH,OAAOA,EAAE,KAMtD,OACI,yBAAKE,UAAU,kBACX,2BAAOA,UAAU,mBAAjB,cACA,yBAAKA,UAAU,iDACVR,EAAMS,MACH,kBAAC,IAAMG,SAAP,KACI,4BAAQM,MAAOlB,EAAMqD,YAAatC,SAAUf,EAAMsD,kBAAmB9C,UAAU,2BAC1EN,MAAMC,KAAK0C,GAAc,SAAC5B,GACvB,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQC,MAAOlB,EAAMuD,YAAaxC,SAAUf,EAAMwD,kBAAmBhD,UAAU,+BAC1EN,MAAMC,KAAKD,MAjBd,KAiBsC,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAMtEQ,WAAWzB,EAAMyD,cAAgB,OAAShC,WAAWzB,EAAMyD,cAAgB,OACvE,2BAAO9B,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMyD,aAAc3B,IAvBvE,MAuBsFC,IAtBtF,OAsBqGhB,SAAUf,EAAM0D,kBAAmBlD,UAAU,0BAG7I,2BAAOmB,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMyD,aAAc3B,IA1BvE,MA0BsFC,IAzBtF,OAyBqGhB,SAAUf,EAAM0D,kBAAmBlD,UAAU,kCCTtJmD,EAtBE,SAAC3D,GAEd,IAAIkC,EAAWlC,EAAMkC,SAErB,OACI,6BACI,yBAAK1B,UAAU,YAAf,aACC0B,EACG,yBAAK1B,UAAU,+CACX,4BAAQA,UAAU,qCAAqCoD,QAAS5D,EAAM6D,kBAAtE,MACA,4BAAQrD,UAAU,wCAAwCoD,QAAS5D,EAAM8D,mBAAzE,QAGJ,yBAAKtD,UAAU,+CACX,4BAAQA,UAAU,uCAAuCoD,QAAS5D,EAAM6D,kBAAxE,MACA,4BAAQrD,UAAU,sCAAsCoD,QAAS5D,EAAM8D,mBAAvE,UCoPLC,EAnQC,SAAC/D,GAEb,IAEIgE,EAAqB9D,MAAMC,KAAK,CAACC,OAAO,IAAQ,SAACC,EAAEC,GAAH,OAAOA,EAAE,KACzD2D,EAAqB/D,MAAMC,KAAK,CAACC,OAAO,IAAQ,SAACC,EAAEC,GAAH,OAAOA,EAAE,KAEzD4D,EAAiBhE,MAAMC,KAAK,CAACC,OAAO,IAAQ,SAACC,EAAEC,GAAH,OAAOA,EAAE,KAczD,OACI,yBAAKE,UAAU,6CACX,yBAAKA,UAAU,SAAf,WACCR,EAAMmE,QACH,kBAAC,IAAMvD,SAAP,KACJ,6BACI,2BAAOJ,UAAU,mBAAjB,mBACA,yBAAKA,UAAU,gCACVR,EAAMS,MACH,kBAAC,IAAMG,SAAP,KACI,4BAAQE,aAAcd,EAAMoE,QAASrD,SAAUf,EAAMqE,cAAe7D,UAAU,2BACzEN,MAAMC,KAAKD,MA9BtB,IA8B0C,SAACqB,EAAGN,GAChC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQH,aAAa,IAAIC,SAAUf,EAAMsE,cAAe9D,UAAU,+BAC7DN,MAAMC,KAAKD,MA/BlB,KA+B0C,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAMtEQ,WAAWzB,EAAMuE,UAAY,QACzB,2BAAO5C,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMuE,SAAUzC,IAjCvE,EAiCsFC,IAhCtF,QAgCqGhB,SAAUf,EAAMwE,cAAehE,UAAU,0BAGrI,2BAAOmB,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMuE,SAAUzC,IApCvE,EAoCsFC,IAnCtF,QAmCqGhB,SAAUf,EAAMwE,cAAehE,UAAU,iCAMrJ,6BACI,2BAAOA,UAAU,mBAAjB,mBACCR,EAAMS,MACH,kBAAC,IAAMG,SAAP,KACI,4BAAQE,aAAcd,EAAMyE,QAAS1D,SAAUf,EAAM0E,cAAelE,UAAU,2BACzEN,MAAMC,KAAKD,MAzDlB,IAyDsC,SAACqB,EAAGN,GAChC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQH,aAAa,IAAIC,SAAUf,EAAM2E,cAAenE,UAAU,+BAC7DN,MAAMC,KAAKD,MA1Dd,KA0DsC,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAMtEQ,WAAWzB,EAAM4E,UAAY,QACzB,2BAAOjD,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAM4E,SAAU9C,IAzDnE,EAyDkFC,IAxDlF,QAwDiGhB,SAAUf,EAAM6E,cAAerE,UAAU,0BAGrI,2BAAOmB,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAM4E,SAAU9C,IA5DnE,EA4DkFC,IA3DlF,QA2DiGhB,SAAUf,EAAM6E,cAAerE,UAAU,gCAIhJR,EAAMS,MACgB,IAAnBT,EAAM8E,SACF,6BACI,2BAAOtE,UAAU,mBAAjB,UACA,4BAAQM,aAAc,EAAGC,SAAUf,EAAM+E,eAAgBvE,UAAU,2BAC9DN,MAAMC,KAAKD,MAjFjB,IAiFsC,SAACqB,EAAGN,GACjC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQH,aAAcd,EAAMgF,SAAUjE,SAAUf,EAAMiF,eAAgBzE,UAAU,+BAC3EN,MAAMC,KAAK6D,GAAoB,SAAC/C,GAC7B,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAMtE,6BACI,2BAAOT,UAAU,mBAAjB,UACA,4BAAQM,aAAc,EAAGC,SAAUf,EAAM+E,eAAgBvE,UAAU,2BAC9DN,MAAMC,KAAKD,MAhGjB,IAgGsC,SAACqB,EAAGN,GACjC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQH,aAAcd,EAAMgF,SAAUjE,SAAUf,EAAMiF,eAAgBzE,UAAU,+BAC3EN,MAAMC,KAAK8D,GAAoB,SAAChD,GAC7B,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAQ1E,6BACI,2BAAOT,UAAU,mBAAjB,UACCiB,WAAWzB,EAAMkF,WA1GlB,GA0G4CzD,WAAWzB,EAAMkF,WAzG7D,IAAqB,KA0GjB,2BAAOvD,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMkF,UAAWpD,IA3GnE,EA2GmFC,IA1GnF,IAAqB,KA0G8EhB,SAAUf,EAAMmF,eAAgB3E,UAAU,0BAGzI,2BAAOmB,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMkF,UAAWpD,IA9GnE,EA8GmFC,IA7GnF,IAAqB,KA6G8EhB,SAAUf,EAAMmF,eAAgB3E,UAAU,gCAKrJ,6BACI,2BAAOA,UAAU,mBAAjB,kBACCR,EAAMS,MACH,kBAAC,IAAMG,SAAP,KACI,4BAAQE,aAAcd,EAAMoF,WAAYrE,SAAUf,EAAMqF,iBAAkB7E,UAAU,2BAC/EN,MAAMC,KAAK+D,GAAgB,SAACjD,GACzB,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQH,aAAcd,EAAMsF,WAAYvE,SAAUf,EAAMuF,iBAAkB/E,UAAU,+BAC/EN,MAAMC,KAAKD,MAhId,KAgIsC,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAMtEQ,WAAWzB,EAAMwF,aA3Hf,KA2H6C/D,WAAWzB,EAAMwF,aA1H9D,SA2HE,2BAAO7D,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMwF,YAAa1D,IA5HnE,IA4HqFC,IA3HrF,SA2HuGhB,SAAUf,EAAMyF,iBAAkBjF,UAAU,0BAGjJ,2BAAOmB,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMwF,YAAa1D,IA/HnE,IA+HqFC,IA9HrF,SA8HuGhB,SAAUf,EAAMyF,iBAAkBjF,UAAU,iCAS7J,kBAAC,IAAMI,SAAP,KACI,6BACI,2BAAOJ,UAAU,mBAAjB,mBACA,yBAAKA,UAAU,gCACVR,EAAMS,MACH,kBAAC,IAAMG,SAAP,KACI,4BAAQE,aAAcd,EAAMoE,QAASrD,SAAUf,EAAMqE,cAAe7D,UAAU,oCACzEN,MAAMC,KAAKD,MA/J1B,IA+J8C,SAACqB,EAAGN,GAChC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQH,aAAa,IAAIC,SAAUf,EAAMsE,cAAe9D,UAAU,wCAC7DN,MAAMC,KAAKD,MAhKtB,KAgK8C,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAMtEQ,WAAWzB,EAAMuE,UAAY,QACzB,2BAAO5C,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMuE,SAAUzC,IAlK3E,EAkK0FC,IAjK1F,QAiKyGhB,SAAUf,EAAMwE,cAAehE,UAAU,0BAGrI,2BAAOmB,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMuE,SAAUzC,IArK3E,EAqK0FC,IApK1F,QAoKyGhB,SAAUf,EAAMwE,cAAehE,UAAU,iCAMrJ,6BACI,2BAAOA,UAAU,mBAAjB,mBACCR,EAAMS,MACH,kBAAC,IAAMG,SAAP,KACI,4BAAQE,aAAcd,EAAMyE,QAAS1D,SAAUf,EAAM0E,cAAelE,UAAU,oCACzEN,MAAMC,KAAKD,MA1LtB,IA0L0C,SAACqB,EAAGN,GAChC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQH,aAAa,IAAIC,SAAUf,EAAM2E,cAAenE,UAAU,wCAC7DN,MAAMC,KAAKD,MA3LlB,KA2L0C,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAMtEQ,WAAWzB,EAAM4E,UAAY,QACzB,2BAAOjD,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAM4E,SAAU9C,IA1LvE,EA0LsFC,IAzLtF,QAyLqGhB,SAAUf,EAAM6E,cAAerE,UAAU,0BAGrI,2BAAOmB,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAM4E,SAAU9C,IA7LvE,EA6LsFC,IA5LtF,QA4LqGhB,SAAUf,EAAM6E,cAAerE,UAAU,gCAKjJ,6BACI,2BAAOA,UAAU,mBAAjB,UACKR,EAAMS,MACH,kBAAC,IAAMG,SAAP,KACI,4BAAQE,aAAa,IAAIC,SAAUf,EAAM+E,eAAgBvE,UAAU,oCAC9DN,MAAMC,KAAKD,MAnNzB,IAmN8C,SAACqB,EAAGN,GACjC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQH,aAAcd,EAAMgF,SAAUjE,SAAUf,EAAMiF,eAAgBzE,UAAU,wCAC3EN,MAAMC,KAAKD,MAAM,KAAK,SAACqB,EAAGN,GACvB,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAMtE,2BAAOU,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMkF,UAAWpD,IAzNvE,EAyNuFC,IAxNvF,IAAqB,KAwNkFhB,SAAUf,EAAMmF,eAAgB3E,UAAU,2BAIrJ,6BACI,2BAAOA,UAAU,mBAAjB,kBACKR,EAAMS,MACH,kBAAC,IAAMG,SAAP,KACI,4BAAQE,aAAcd,EAAMoF,WAAYrE,SAAUf,EAAMqF,iBAAkB7E,UAAU,2BAC/EN,MAAMC,KAAK+D,GAAgB,SAACjD,GACzB,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQH,aAAcd,EAAMsF,WAAYvE,SAAUf,EAAMuF,iBAAkB/E,UAAU,+BAC/EN,MAAMC,KAAKD,MA1OtB,KA0O8C,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAMtE,2BAAOU,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMwF,YAAa1D,IArOvE,IAqOyFC,IApOzF,SAoO2GhB,SAAUf,EAAMyF,iBAAkBjF,UAAU,8BCpO9JkF,EAlBI,SAAC1F,GAEhB,OACI,yBAAKQ,UAAU,2CACX,2BAAOA,UAAU,gBAAjB,eACA,yBAAKA,UAAU,+DACVR,EAAM2F,YAAc,IAAM3F,EAAM2F,YAAc,GAC3C,2BAAOhE,KAAK,SAAST,MAAOlB,EAAM2F,WAAY7D,IAAI,KAAKC,IAAI,KAAK6D,KAAK,MAAM7E,SAAUf,EAAM6F,iBAAkBrF,UAAU,gCAGvH,2BAAOmB,KAAK,SAAST,MAAOlB,EAAM2F,WAAY7D,IAAI,KAAKC,IAAI,KAAK6D,KAAK,MAAM7E,SAAUf,EAAM6F,iBAAkBrF,UAAU,qCAE3H,2BAAOmB,KAAK,QAAQT,MAAOlB,EAAM2F,WAAY7D,IAAI,KAAKC,IAAI,KAAK6D,KAAK,OAAO7E,SAAUf,EAAM6F,iBAAkBrF,UAAU,4BCOxHsF,EApBA,SAAC9F,GAEZ,IAAI+F,EACA/F,EAAMS,MACFC,SAASV,EAAMW,YAAcD,SAASV,EAAMwB,YAAcC,WAAWzB,EAAMqB,YAG3EI,WAAWzB,EAAM0B,YAGrBsE,EAAcvE,WAAWsE,EAAW,GAExC,OACI,6BACI,2BAAOvF,UAAU,mBAAjB,UACA,2BAAOmB,KAAK,QAAQb,aAAa,IAAIgB,IAAI,IAAI8D,KAAK,OAAO7D,IAAKiE,EAAajF,SAAUf,EAAMiG,qBAAsBzF,UAAU,4BCwCxH0F,EAvDQ,SAAClG,GAEpB,IAGIO,EAAkBL,MAAMC,KAAK,CAACC,OAAO,IAAO,SAACC,EAAEC,GAAH,OAAOA,EAAE,KAKzD,OACI,6BACI,2BAAOE,UAAU,mBAAjB,mBACA,yBAAKA,UAAU,gCACVR,EAAMS,MACH,kBAAC,IAAMG,SAAP,KACI,4BAAQE,aAAcd,EAAMmG,QAASpF,SAAUf,EAAMoG,cAAe5F,UAAU,2BACzEN,MAAMC,KAAKD,MAfjB,IAesC,SAACqB,EAAGN,GACjC,OAAS,4BAAQC,MAAS,GAAFD,EAAME,IAAO,GAAFF,GAAOA,EAAG,SAGxB,IAA5BP,SAASV,EAAMmG,SAChB,4BAAQrF,aAAcd,EAAMqG,QAAStF,SAAUf,EAAMsG,cAAe9F,UAAU,2BACzEN,MAAMC,KAAKI,GAAiB,SAACU,GAC1B,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAK/C,4BAAQH,aAAcd,EAAMqG,QAAStF,SAAUf,EAAMsG,cAAe9F,UAAU,2BACzEN,MAAMC,KAAKD,MA3BjB,KA2BsC,SAACqB,EAAGN,GACjC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAI/C,4BAAQH,aAAcd,EAAMuG,QAASxF,SAAUf,EAAMwG,cAAehG,UAAU,+BACzEN,MAAMC,KAAKD,MAhCd,KAgCsC,SAACqB,EAAGN,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAMtEQ,WAAWzB,EAAMyG,UApClB,OAoC0ChF,WAAWzB,EAAMyG,UAnC3D,SAoCK,2BAAO9E,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMyG,SAAU3E,IArCnE,MAqCkFC,IApClF,SAoCiGhB,SAAUf,EAAM0G,cAAelG,UAAU,0BAGrI,2BAAOmB,KAAK,SAASb,aAAcc,KAAKC,MAAM7B,EAAMyG,SAAU3E,IAxCnE,MAwCkFC,IAvClF,SAuCiGhB,SAAUf,EAAM0G,cAAelG,UAAU,kC,eC2wD9ImG,EAxzDD,SAAA3G,GAEE4G,OAAOC,WAAW,sBAClBD,OAAOC,WAAW,sBAElBD,OAAOC,WAAW,sBAClBD,OAAOC,WAAW,sBAElBD,OAAOC,WAAW,sBANhC,IAOMC,EAAQF,OAAOC,WAAW,sBAM5Bd,GAJUa,OAAOC,WAAW,uBAClBD,OAAOC,WAAW,uBAI9B7G,EAAMS,MAC2B,KAA/BC,SAASV,EAAMW,YACkB,KAA/BD,SAASV,EAAMwB,YACb,GAGA,GAIFd,SAASV,EAAMW,YACfD,SAASV,EAAMwB,YACfC,WAAWzB,EAAMqB,YAInBI,WAAWzB,EAAM0B,aAAe,OAASD,WAAWzB,EAAM0B,aAAe,UACvED,WAAWzB,EAAM0B,YAAc,KAG/B,KAAO,MAITqF,EACF/G,EAAMS,MAC4B,IAAhCC,SAASV,EAAMoC,aACb,GAAMX,WAAWzB,EAAMwC,aAAe,GAGtC9B,SAASV,EAAMoC,aACf1B,SAASV,EAAMsC,aACfb,WAAWzB,EAAMwC,aAInBf,WAAWzB,EAAM0C,cAAgB,OAASjB,WAAWzB,EAAM0C,cAAgB,UACzEjB,WAAWzB,EAAM0C,aAAe,KAGhC,KAAO,KAITsE,EACFhH,EAAMS,MACJgB,WAAWzB,EAAM8C,YAAcrB,WAAWzB,EAAMgD,YAGhDvB,WAAWzB,EAAMkD,aAAe,KAAOzB,WAAWzB,EAAMkD,aAAgB,SACtEzB,WAAWzB,EAAMkD,YAAc,KAG/B,GAIF+D,EACFjH,EAAMS,MACJgB,WAAWzB,EAAMqD,aAAe5B,WAAWzB,EAAMuD,aAGjD9B,WAAWzB,EAAMyD,cAAgB,OAAShC,WAAWzB,EAAMyD,cAAgB,OACzEhC,WAAWzB,EAAMyD,aAAe,KAGhC,MAAQ,KAIVyD,EACFlH,EAAMS,MACJT,EAAMmE,QACJ1C,WAAWzB,EAAMoE,SAAW3C,WAAWzB,EAAMmH,SAG7C,EAIFnH,EAAMmE,QACH1C,WAAWzB,EAAMuE,SAAW,KAG7B,EAIF6C,EACFpH,EAAMS,MACJT,EAAMmE,QACJ1C,WAAWzB,EAAMyE,SAAWhD,WAAWzB,EAAMqH,SAG7C,EAIFrH,EAAMmE,QACH1C,WAAWzB,EAAM4E,SAAW,KAG7B,EAKJsC,EADEzF,WAAWzB,EAAMuE,UAAY,GAAK9C,WAAWzB,EAAMuE,UAAY,QAC7C9C,WAAWzB,EAAMuE,SAAW,KAE5B,EAIpB6C,EADE3F,WAAWzB,EAAM4E,UAAY,GAAKnD,WAAWzB,EAAM4E,UAAY,QAC7CnD,WAAWzB,EAAM4E,SAAW,KAE5B,EAGtB,IAAI0C,EAAQ,GAEe,IAAvBtH,EAAMuH,aACRD,EAAQ5G,SAASqF,EAAWiB,IACI,IAAvBhH,EAAMuH,eACfD,EAAQ5G,SAASqG,EAAYE,IAG/B,IACIO,EACFxH,EAAMS,MACJgB,WAAWzB,EAAMyH,gBAGhBhG,WAAWzB,EAAMyH,gBAAkB,KAGpCC,EACF1H,EAAMS,MACJgB,WAAWzB,EAAMoF,YAAc3D,WAAWzB,EAAMsF,YAG/C7D,WAAWzB,EAAMwF,YAAc,KAIlCkC,EADEjG,WAAWzB,EAAMwF,aAAgB,KAAa/D,WAAWzB,EAAMwF,aAAgB,SAChE/D,WAAWzB,EAAMwF,YAAc,KAE/B,OAGnB,IAAImC,EACF3H,EAAMS,MACJgB,WAAWzB,EAAMoE,SAAW3C,WAAWzB,EAAMmH,SAG5C1F,WAAWzB,EAAMuE,SAAW,KAI/BoD,EADElG,WAAWzB,EAAMuE,UAAY,GAAK9C,WAAWzB,EAAMuE,UAAY,QACpD9C,WAAWzB,EAAMuE,SAAW,KAE5B,EAGf,IAAIqD,EACF5H,EAAMS,MACJgB,WAAWzB,EAAMyE,SAAWhD,WAAWzB,EAAMqH,SAG5C5F,WAAWzB,EAAM4E,SAAW,KAI/BgD,EADEnG,WAAWzB,EAAM4E,UAAY,GAAKnD,WAAWzB,EAAM4E,UAAY,QACpDnD,WAAWzB,EAAM4E,SAAW,KAE5B,EAGf,IAAIiD,EACF7H,EAAMS,MACJgB,WAAWzB,EAAM8E,UAAYrD,WAAWzB,EAAMgF,UAG7CvD,WAAWzB,EAAMkF,UAAY,KAIhC2C,EADEpG,WAAWzB,EAAMkF,WAAa,GAAKzD,WAAWzB,EAAMkF,WAAa,KACrDzD,WAAWzB,EAAMkF,UAAY,KAE7B,GAGhB,IAAI4C,EACFJ,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKhB,EAAWC,IAE5BgB,EACFP,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKf,EAAYD,IAE7BhH,EAAMmE,SACR2D,EACEJ,EACA9F,KAAKmG,IACHnG,KAAKoG,MACFhB,EAAWI,IAAsBH,EAAYC,KAGpDe,EACEP,EACA9F,KAAKmG,IACHnG,KAAKoG,MACFf,EAAYC,IAAsBF,EAAWI,OAIpDU,EACEJ,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKhB,EAAWC,IAChCgB,EACEP,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKf,EAAYD,KAGnC,IAAIkB,EAAc,GAEdC,EACFnI,EAAMS,MACwB,IAA5BC,SAASV,EAAMmG,SACbzF,SAASV,EAAMqG,SAAW,EACxB,EAGArG,EAAMqG,QAIR5E,WAAWzB,EAAMmG,SACjB1E,WAAWzB,EAAMqG,SACjB5E,WAAWzB,EAAMuG,SAInB9E,WAAWzB,EAAMyG,SAAW,MAGZ,IAAhBzG,EAAMS,QAEN0H,EADE1G,WAAWzB,EAAMyG,UAAY,OAAShF,WAAWzB,EAAMyG,UAAY,SACpDhF,WAAWzB,EAAMyG,SAAW,KAE5B,MAAQ,MAI7B,IAAI2B,EAAgBpI,EAAM2F,YAAa,IAAM3F,EAAM2F,YAAc,GAAK3F,EAAM2F,WAAa,KAGzF,IAA2B,IAAvB3F,EAAMuH,aAER,IAA2B,IAAvBvH,EAAMqI,aAAuB,EAEL,IAAtBrI,EAAMsI,cACRtB,EAAWvF,WACTwF,EAAYrF,KAAK2G,IAAIH,GAAiBxG,KAAK4G,GAAK,OAElDV,EACEJ,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKhB,EAAWC,IAChCgB,EACAP,EACE9F,KAAKmG,IAAInG,KAAKoG,KAAKf,EAAYD,IAC7BhH,EAAMmE,SACR2D,EACAJ,EACE9F,KAAKmG,IACHnG,KAAKoG,MACFhB,EAAWI,IAAsBH,EAAYC,KAGpDe,EACAP,EACE9F,KAAKmG,IACHnG,KAAKoG,MACFf,EAAYC,IAAsBF,EAAWI,OAIpDU,EACAJ,EACE9F,KAAKmG,IAAInG,KAAKoG,KAAKhB,EAAWC,IAChCgB,EACAP,EACE9F,KAAKmG,IAAInG,KAAKoG,KAAKf,EAAYD,MAIrC,IAAK,IAAI/F,EAAI,EAAGA,EAAIqG,EAAOrG,IACzBiH,EAAYO,KACV1C,EAAWiB,EAAW/F,EACtBgG,EAAYhG,EACZ8E,EAAWiB,GAAY/F,EAAI,GAC3BgG,EAAYhG,EACZ8E,EAAWiB,GAAY/F,EAAI,GAC3BgG,GAAahG,EAAI,IAKrBjB,EAAMkC,SACJgG,EAAYO,KACRP,EAAYA,EAAY9H,OAAS,IAAM6H,EAAYb,GACnDc,EAAYA,EAAY9H,OAAS,GACjC8H,EAAY,GACZJ,EAAYZ,EACZgB,EAAY,GACZC,EACAD,EAAY,GA7LR,GA8LJC,EACAD,EAAY,GA/LR,GAgMJ,GAIJA,EAAYO,KACVP,EAAYA,EAAY9H,OAAS,IAAM6H,EAAYb,GACnDc,EAAYA,EAAY9H,OAAS,GACjC8H,EAAY,GACZA,EAAY,GAAKJ,EAAYZ,EAC7BgB,EAAY,GACZC,EACAD,EAAY,GA3MN,GA4MNC,EACAD,EAAY,GA7MN,GA8MN,OAKC,CAELlB,EAAWjB,GADXuB,EAAQ1F,KAAKC,MAAMkE,EAAW,MAEJ,IAAtB/F,EAAMsI,cACRtB,EAAWvF,WACTwF,EAAYrF,KAAK2G,IAAIH,GAAiBxG,KAAK4G,GAAK,OAElDV,EACEJ,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKhB,EAAWC,IAChCgB,EACEP,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKf,EAAYD,IAC7BhH,EAAMmE,SACR2D,EACEJ,EACA9F,KAAKmG,IACHnG,KAAKoG,MACFhB,EAAWI,IAAsBH,EAAYC,KAGpDe,EACEP,EACA9F,KAAKmG,IACHnG,KAAKoG,MACFf,EAAYC,IAAsBF,EAAWI,OAIpDU,EACEJ,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKhB,EAAWC,IAChCgB,EACEP,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKf,EAAYD,MAIrC,IAAK,IAAI/F,EAAI,EAAGA,EAAIqG,EAAOrG,IACzBiH,EAAYO,KACV1C,EAAWiB,EAAW/F,EACtBgG,EAAYhG,EACZ8E,EAAWiB,GAAY/F,EAAI,GAC3BgG,EAAYhG,EACZ8E,EAAWiB,GAAY/F,EAAI,GAC3BgG,GAAahG,EAAI,IAKrBjB,EAAMkC,SACJgG,EAAYO,KACRP,EAAYA,EAAY9H,OAAS,IAAM6H,EAAYb,GACnDc,EAAYA,EAAY9H,OAAS,GACjC8H,EAAY,GACZJ,EAAYZ,EACZgB,EAAY,GACZC,EACAD,EAAY,GA7QR,GA8QJC,EACAD,EAAY,GA/QR,GAgRJ,GAIJA,EAAYO,KACVP,EAAYA,EAAY9H,OAAS,IAAM6H,EAAYb,GACnDc,EAAYA,EAAY9H,OAAS,GACjC8H,EAAY,GACZA,EAAY,GAAKJ,EAAYZ,EAC7BgB,EAAY,GACZC,EACAD,EAAY,GA3RN,GA4RNC,EACAD,EAAY,GA7RN,GA8RN,QAMD,IAA2B,IAAvBlI,EAAMuH,aAEf,IAA2B,IAAvBvH,EAAMqI,aAAuB,EACL,IAAtBrI,EAAMsI,cACRtB,EAAWvF,WACTwF,EAAYrF,KAAK2G,IAAIH,GAAiBxG,KAAK4G,GAAK,OAElDV,EACEJ,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKhB,EAAWC,IAChCgB,EACEP,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKf,EAAYD,IAC7BhH,EAAMmE,SACR2D,EACEJ,EACA9F,KAAKmG,IACHnG,KAAKoG,MACFhB,EAAWI,IAAsBH,EAAYC,KAGpDe,EACEP,EACA9F,KAAKmG,IACHnG,KAAKoG,MACFf,EAAYC,IAAsBF,EAAWI,OAIpDU,EACEJ,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKhB,EAAWC,IAChCgB,EACEP,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKf,EAAYD,MAIrC,IAAK,IAAI/F,EAAI,EAAGA,EAAIqG,EAAOrG,IACzBiH,EAAYO,KACV1B,EAAYC,EAAW/F,EACvBgG,EAAYhG,EACZ8F,EAAYC,GAAY/F,EAAI,GAC5BgG,EAAYhG,EACZ8F,EAAYC,GAAY/F,EAAI,GAC5BgG,GAAahG,EAAI,IAKrBjB,EAAMkC,SACJgG,EAAYO,KACRP,EAAYA,EAAY9H,OAAS,IAAM6H,EAAYb,GACnDc,EAAYA,EAAY9H,OAAS,GACjC8H,EAAY,GACZJ,EAAYZ,EACZgB,EAAY,GACZC,EACAD,EAAY,GA9VR,GA+VJC,EACAD,EAAY,GAhWR,GAiWJ,GAIJA,EAAYO,KACVP,EAAYA,EAAY9H,OAAS,IAAM6H,EAAYb,GACnDc,EAAYA,EAAY9H,OAAS,GACjC8H,EAAY,GACZA,EAAY,GAAKJ,EAAYZ,EAC7BgB,EAAY,GACZC,EACAD,EAAY,GA5WN,GA6WNC,EACAD,EAAY,GA9WN,GA+WN,OAKC,CAQLjB,EAAYF,GAPZO,EACsB,IAApBtH,EAAM+G,UACJnF,KAAKC,MAAMkF,EAAY,GAGvBnF,KAAKC,MAAMkF,EAAY,KAGD,IAAtB/G,EAAMsI,cACRtB,EAAWvF,WACTwF,EAAYrF,KAAK2G,IAAIH,GAAiBxG,KAAK4G,GAAK,OAElDV,EACEJ,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKhB,EAAWC,IAChCgB,EACEP,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKf,EAAYD,IAC7BhH,EAAMmE,SACR2D,EACEJ,EACA9F,KAAKmG,IACHnG,KAAKoG,MACFhB,EAAWI,IAAsBH,EAAYC,KAGpDe,EACEP,EACA9F,KAAKmG,IACHnG,KAAKoG,MACFf,EAAYC,IAAsBF,EAAWI,OAIpDU,EACEJ,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKhB,EAAWC,IAChCgB,EACEP,EACA9F,KAAKmG,IAAInG,KAAKoG,KAAKf,EAAYD,MAIrC,IAAK,IAAI/F,EAAI,EAAGA,EAAIqG,EAAOrG,IACzBiH,EAAYO,KACV1B,EAAYC,EAAW/F,EACvBgG,EAAYhG,EACZ8F,EAAYC,GAAY/F,EAAI,GAC5BgG,EAAYhG,EACZ8F,EAAYC,GAAY/F,EAAI,GAC5BgG,GAAahG,EAAI,IAKrBjB,EAAMkC,SACJgG,EAAYO,KACRP,EAAYA,EAAY9H,OAAS,IAAM6H,EAAYb,GACnDc,EAAYA,EAAY9H,OAAS,GACjC8H,EAAY,GACZJ,EAAYZ,EACZgB,EAAY,GACZC,EACAD,EAAY,GApbR,GAqbJC,EACAD,EAAY,GAtbR,GAubJ,GAIJA,EAAYO,KACVP,EAAYA,EAAY9H,OAAS,IAAM6H,EAAYb,GACnDc,EAAYA,EAAY9H,OAAS,GACjC8H,EAAY,GACZA,EAAY,GAAKJ,EAAYZ,EAC7BgB,EAAY,GACZC,EACAD,EAAY,GAlcN,GAmcNC,EACAD,EAAY,GApcN,GAqcN,GAQR,IAAIQ,EAAc,CAChBR,EAAYA,EAAY9H,OAAS,IAAkB,EAAX4G,EACxCmB,EACAD,EAAYA,EAAY9H,OAAS,IAAkB,EAAX4G,EACxC,EACAkB,EAAYA,EAAY9H,OAAS,KAAO4G,EAAWQ,GACnD,EACAU,EAAYA,EAAY9H,OAAS,KAAO4G,EAAWQ,GACnDW,GAGFQ,QAAQC,IAAIT,GAGZ,IAAIU,GAAe,GAEjB9B,EAAY,IACZE,EAAYK,EAAQ,IACpBvB,EAAW,IACXiB,EAAWM,EAAQ,MAEnBuB,GAAe,GAiBjB,IAbA,IAAIC,EACFhC,EAAMiC,QACmB,IAApBnC,OAAOoC,WAAoB,GAC3BpC,OAAOoC,WACVC,EACFnC,EAAMiC,QACDnC,OAAOsC,YACc,GAArBtC,OAAOsC,YACVC,EAAeT,EAAY,GA9ejB,GA8egCR,EAAY,GACtDkB,EAAKN,GAAelH,KAAKyH,IAAIX,EAAY,IA/e/B,GA+e+CR,EAAY,IACrEoB,EAAQxC,EAAMiC,QAAe,IAALK,EAAgB,GAAJA,EAG/BG,EAAI,EAAGA,EAAIrB,EAAY9H,OAAQmJ,IACtCrB,EAAYqB,GAAKrB,EAAYqB,GAAKD,EAEpC,IAAK,IAAIE,EAAI,EAAGA,EAAId,EAAYtI,OAAQoJ,IACtCd,EAAYc,GAAKd,EAAYc,GAAKF,GAEb,IAAnBtJ,EAAMkC,WACRgG,EAAcA,EAAYuB,MAAM,EAAGvB,EAAY9H,OAAS,IAI1D,IAAIsJ,EAAcZ,EAAc,EAAMK,EAAcG,EAAS,EACzDK,EAAO7C,EAAMiC,QAAU,CAACW,EAAY,KAAO,CAACA,EAAa,GAAI,KAG7DE,EACFN,EAAQ3B,EACNkC,EACFP,EAAQ1B,EACNkC,EACFR,EAAQzB,EAENkC,EAAc/C,EAAWsC,EAAQQ,EAASD,EAC1CG,EAAc/C,EAAYqC,EAAQM,EAGlCK,EAAU,GACd,GAAIjK,EAAMkC,SACR,IAAK,IAAI5B,EAAI,EAAGA,EAAI4H,EAAY9H,OAAQE,GAAK,EAC3C2J,EAAQxB,KAAKkB,EAAK,GAAKzB,EAAY5H,GAAKwJ,QAG1C,IAAK,IAAIxJ,EAAI,EAAGA,EAAI4H,EAAY9H,OAAQE,GAAK,EAC3C2J,EAAQxB,KAAKkB,EAAK,GAAKzB,EAAY5H,GAAKwJ,GAK5C,IAFA,IAAII,EAAU,GACVC,EAAU,GACLC,EAAI,EAAGA,EAAIlC,EAAY9H,OAAQgK,GAAK,EAC3CF,EAAQzB,KAAKkB,EAAK,GAAKzB,EAAYkC,IACnCD,EAAQ1B,KAAKkB,EAAK,GAAKzB,EAAYkC,GAAKR,GAG1C,IADA,IAAIS,EAAU,GACLC,EAAI,EAAGA,EAAIL,EAAQ7J,OAAQkK,IAClCD,EAAQ5B,KAAKwB,EAAQK,GAAKR,GAK5B,IADA,IAAIS,EAAW,GACNC,EAAI,EAAGA,EAAIP,EAAQ7J,OAAQoK,IAClCD,EAAS9B,KAAKwB,EAAQO,IAGxB,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAIR,EAAQ9J,OAAQsK,IAClCD,EAAShC,KAAKyB,EAAQQ,IAGxB,IAAIC,GAAc3K,EAAMkC,SAAWoF,EAAQA,EAAQ,EAG/CsD,GAAW,CAACX,EAAQ,GAAIC,EAAQ,IAGhCW,GAAe,CAAC3C,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAAIA,EAAY,IAG5E4C,GAAkB,CAAC5C,EAAY,GAAIA,EAAY,IAI/C6C,GAAajE,EAAMiC,QAAW,EAAW,IACzCiC,GAAclE,EAAMiC,QAAU,GAAK,GACnCkC,GAAiBnE,EAAMiC,QAAU,GAAK,KACtCmC,GAAgBpE,EAAMiC,QAAU,GAAK,EACrCoC,GAAWrE,EAAMiC,QAAU,GAAK,EAChCqC,GAActE,EAAMiC,QAAU,IAAM,IACpCsC,GAAavE,EAAMiC,QAAU,CAAC,EAAG,GAAK,CAAC,EAAG,GAK1CuC,GACFtL,EAAMkC,SACJ,CACEgG,EAAYA,EAAY9H,OAAS,GAAK4K,GACtC,EACA9C,EAAYA,EAAY9H,OAAS,GAAK4K,GACtC9C,EAAYA,EAAY9H,OAAS,IAInC,CACE8H,EAAY,GA/kBJ,GA+kBiBoB,EAAQ0B,GACjC,EACA9C,EAAY,GAjlBJ,GAilBiBoB,EAAQ0B,GACjC9C,EAAYA,EAAY9H,OAAS,IAInCmL,GAAgB,CAClBD,GAAM,GAAKP,GACXO,GAAM,GAAKP,GACXO,GAAM,GACNA,GAAM,GACNA,GAAM,GAAKP,GACXO,GAAM,GAAKP,IAETS,GAAgB,CAClBF,GAAM,GAAKP,GACXO,GAAM,GAAKP,GACXO,GAAM,GACNA,GAAM,GACNA,GAAM,GAAKP,GACXO,GAAM,GAAKP,IAETU,GAAY,CAACH,GAAM,IAAKA,GAAM,GAAKA,GAAM,IAAM,GAC/CI,GAAiB,CACnBxD,EAAYA,EAAY9H,OAAS,GACjCkL,GAAM,GACNA,GAAM,GACNA,GAAM,IAEJK,GAAiB,CACnBzD,EAAYA,EAAY9H,OAAS,IACjCkL,GAAM,GACNA,GAAM,GACNA,GAAM,IAGJM,GACL5L,EAAMkC,SACLN,KAAKiK,OACD3D,EAAYA,EAAY9H,OAAS,IAAM8H,EAAY,IAAMoB,EAAQ,IAIrE1H,KAAKiK,OACD3D,EAAYA,EAAY9H,OAAS,GAAK8H,EAAY,IAAMA,EAAY,GAAGA,EAAY,KAAOoB,EAAQ,IAIlGwC,GACL9L,EAAMkC,SACLN,KAAKiK,OACF3D,EAAYA,EAAY9H,OAAS,IAAM8H,EAAY,IAAMoB,EAC7C,GAAZsC,IAIHhK,KAAKiK,OACF3D,EAAYA,EAAY9H,OAAS,GAAK8H,EAAY,IAAMA,EAAY,GAAGA,EAAY,KAAOoB,EAC9E,GAAZsC,IAICG,GACL/L,EAAMkC,SACLN,KAAKC,MAID,KAHAqG,EAAYA,EAAY9H,OAAS,IAAM8H,EAAY,IAAMoB,EAC7C,GAAZsC,GACAE,KAKJlK,KAAKC,MAID,KAHAqG,EAAYA,EAAY9H,OAAS,GAAK8H,EAAY,IAAMA,EAAY,GAAGA,EAAY,KAAOoB,EAC9E,GAAZsC,GACAE,KAMkB,KAAlBC,KAGFA,GAAgB,EAEI,MAHpBD,IAAe,IAIbF,IAAa,EACbE,GAAc,GACW,KAAhBA,KACTF,IAAa,EACbE,GAAc,EACdC,GAAgB,IAKpB,IAAIC,GACLhM,EAAMkC,SACLN,KAAKyH,IAAIzH,KAAKC,MAAiE,MAAzDqG,EAAYA,EAAY9H,OAAS,IAAM8H,EAAY,IAAcoB,IAGvF1H,KAAKyH,IAAIzH,KAAKC,MAAkG,MAA1FqG,EAAYA,EAAY9H,OAAS,GAAK8H,EAAY,IAAMA,EAAY,GAAGA,EAAY,KAAeoB,IAGpH2C,GACFjM,EAAMS,MACJmL,GAAY,KAAOE,GAAc,KAAOC,GAAgB,MAGxDC,GAAU,MAIVE,GACFlM,EAAMkC,SACJ,CACEgG,EAAYA,EAAY9H,OAAS,IACjC8H,EAAYA,EAAY9H,OAAS,IAAM4K,GACvC9C,EAAY,GACZA,EAAYA,EAAY9H,OAAS,IAAM4K,IAIzC,CACE9C,EAAYA,EAAY9H,OAAS,GACjC8H,EAAYA,EAAY9H,OAAS,GAAK4K,GACtC9C,EAAY,GACZA,EAAYA,EAAY9H,OAAS,GAAK4K,IAIxCmB,GAAgB,CAClBD,GAAK,GAAKnB,GACVmB,GAAK,GAAKnB,GACVmB,GAAK,GACLA,GAAK,GACLA,GAAK,GAAKnB,GACVmB,GAAK,GAAKnB,IAERqB,GAAiB,CACnBF,GAAK,GAAKnB,GACVmB,GAAK,GAAKnB,GACVmB,GAAK,GACLA,GAAK,GACLA,GAAK,GAAKnB,GACVmB,GAAK,GAAKnB,IAERsB,GAAW,EAAEH,GAAK,GAAKA,GAAK,IAAM,EAAGA,GAAK,IAC1CI,GAAiB,CAACJ,GAAK,GAAIA,GAAK,GAAIA,GAAK,GAAIA,GAAK,GAAKlB,IACvDuB,GAAkB,CAACL,GAAK,GAAIA,GAAK,GAAIA,GAAK,GAAIhE,EAAY,IAE1DsE,GACFxM,EAAMkC,SACJN,KAAKiK,OACF3D,EAAY,GAAKA,EAAYA,EAAY9H,OAAS,KAAOkJ,EAAQ,IAIpE1H,KAAKiK,OACF3D,EAAY,GAAKA,EAAYA,EAAY9H,OAAS,IAAMkJ,EAAQ,IAIjEmD,GACJzM,EAAMkC,SACJN,KAAKiK,OACF3D,EAAY,GAAKA,EAAYA,EAAY9H,OAAS,KAAOkJ,EAC/C,GAAXkD,IAIF5K,KAAKiK,OACF3D,EAAY,GAAKA,EAAYA,EAAY9H,OAAS,IAAMkJ,EAC9C,GAAXkD,IAIFE,GACL1M,EAAMkC,SACLN,KAAKC,MAID,KAHAqG,EAAY,GAAKA,EAAYA,EAAY9H,OAAS,KAAOkJ,EAC9C,GAAXkD,GACAC,KAKJ7K,KAAKC,MAID,KAHAqG,EAAY,GAAKA,EAAYA,EAAY9H,OAAS,IAAMkJ,EAC7C,GAAXkD,GACAC,KAMiB,KAAjBC,KAGFA,GAAe,EAEI,MAHnBD,IAAc,IAIZD,IAAY,EACZC,GAAa,GACW,KAAfA,KACTD,IAAY,EACZC,GAAa,EACbC,GAAe,IAKnB,IAAIC,GACF3M,EAAMkC,SACJN,KAAKyH,IAAIzH,KAAKC,MAC+C,MAAzDqG,EAAY,GAAKA,EAAYA,EAAY9H,OAAS,KAAekJ,IAGrE1H,KAAKyH,IAAIzH,KAAKC,MAC8C,MAAxDqG,EAAY,GAAKA,EAAYA,EAAY9H,OAAS,IAAakJ,IAGnEsD,GACF5M,EAAMS,MACJ+L,GAAW,KAAOC,GAAa,KAAOC,GAAe,MAGrDC,GAAS,MAITE,IACDpL,WAAWzB,EAAMoF,YAAc3D,WAAWzB,EAAMsF,aAAegE,EAC9DwD,GAAKhF,EAAYwB,EACjByD,GAASnL,KAAKoG,KAAKf,EAAYD,GAC/BgG,GAAKpL,KAAKqL,KAAKH,GAAKA,GAAKD,GAAKA,IAE9BK,GAAKlN,EAAMmE,QAAW+D,EAAY,IAAM2B,EAAmB3B,EAAY,IACvEiF,GAAKnN,EAAMmE,QAAW+D,EAAY,IAAM0B,EAAmB1B,EAAY,IAEvEZ,GAAS,IACX4F,GAAKhF,EAAY,GAAK2B,EACtBsD,GAAKjF,EAAY,GAAK0B,IAGD,IAAnB5J,EAAMkC,WACRiL,IAAOlG,EAAYqC,GAgDrB,IA7CA,IAAI8D,GAAe9F,EAAQ,EAIvB+F,GAAY,CAACH,GAAIC,GAFXD,GAAKF,GAAKpL,KAAK0L,IAAIP,IAEEF,GAAK,EAD1BM,GAAKL,GAAKE,GAAKpL,KAAKmG,IAAIgF,IACWD,GAAK,GAC9CS,GACFvN,EAAMS,MACJT,EAAMoF,WAAa,KAAOxD,KAAKC,MAAyB,GAAnB7B,EAAMsF,YAAmB,MAG9D1D,KAAKC,MAAsB,KAAhB6F,GAAwB,MAInC8F,GACFxN,EAAMkC,SACJ,CAACgG,EAAY,GAAI,EAAGA,EAAY,GAAK4B,EAAQ,GAG7C,CAAC5B,EAAY,GAAIjB,EAAUqC,EAAOpB,EAAY,GAAK4B,EAAQ7C,EAAUqC,GAErEmE,GAAoB,CACtBD,GAAQ,GACRA,GAAQ,GACRA,GAAQ,GACRA,GAAQ,GAAKxC,IAEX0C,GAAqB,CACvBF,GAAQ,GACRA,GAAQ,GACRA,GAAQ,GACRA,GAAQ,GAAKxC,IAEX2C,GAAc,EAAEH,GAAQ,GAAKA,GAAQ,IAAM,EAAGA,GAAQ,GAAiB,IAAXrC,IAC5DyC,GACF5N,EAAMS,MACJT,EAAM8E,SAAW,KAAwB,GAAjB9E,EAAMgF,SAAgB,MAG9CpD,KAAKC,MAAoB,KAAdgG,GAAsB,MAIjCgG,GAAiBnF,EAAY,GAC7BoF,GAAiB9N,EAAMkC,SAAWgG,EAAYA,EAAY9H,OAAS,GAAK8H,EAAYA,EAAY9H,OAAS,GACpG2N,GAAI,EAAGA,GAAI7F,EAAY9H,OAAQ2N,IAAK,EAEzCF,GAAiB3F,EAAY6F,GAAI,IACjCF,GAAiB3F,EAAY6F,GAAI,KAEjCD,GAAiB5F,EAAY6F,GAAI,IAIrC,IAAIC,GACFhO,EAAMkC,SACJ,CACE2L,GACA3F,EAAYA,EAAY9H,OAAS,GACjC8H,EAAYA,EAAY9H,OAAS,IACjC8H,EAAYA,EAAY9H,OAAS,IAGnC,CACEyN,GACA3F,EAAYA,EAAY9H,OAAS,GACjC8H,EAAYA,EAAY9H,OAAS,GACjC8H,EAAYA,EAAY9H,OAAS,IAGnC6N,IAAkB,EAClBJ,GAAiB3F,EAAYA,EAAY9H,OAAS,MACpD6N,IAAkB,GAGpB,IAAIC,GAAY,CACdL,GACAnF,EAAY,GACZmF,GACAC,IAEEK,GAAoB,CACtBD,GAAU,GAAKnD,GACfmD,GAAU,GAAKnD,GACfmD,GAAU,GACVA,GAAU,GACVA,GAAU,GAAKnD,GACfmD,GAAU,GAAKnD,IAEbqD,GAAoB,CACtBF,GAAU,GAAKnD,GACfmD,GAAU,GAAKnD,GACfmD,GAAU,GACVA,GAAU,GACVA,GAAU,GAAKnD,GACfmD,GAAU,GAAKnD,IAGbsD,GAAgB,CAACH,GAAU,IAAKA,GAAU,GAAKA,GAAU,IAAM,GAC/DI,KACA7M,WAAWqM,IAAkBrM,WAAWyM,GAAU,KAAO5E,GAAOiF,QAAQ,GACxEC,GAAgB5M,KAAKiK,OACpBiC,GAAiBI,GAAU,IAAM5E,EAAQ,IAE1CmF,GAAkB7M,KAAKiK,OACxBiC,GAAiBI,GAAU,IAAM5E,EAAwB,GAAhBkF,IAGxCE,GAKE,GAJJ9M,KAAKC,OACFiM,GAAiBI,GAAU,IAAM5E,EAChB,GAAhBkF,GACAC,IAEFE,GACF3O,EAAMS,MACJ+N,GAAgB,KAAOC,GAAkB,KAAOC,GAAoB,MAGpE9M,KAAKC,MAAyC,MAAjCiM,GAAiBI,GAAU,IAAc5E,GAAS,MAIzC,KAAtBoF,KAGFA,GAAoB,EAEI,MAHxBD,IAAmB,IAIjBD,IAAiB,EACjBC,GAAkB,GACW,KAApBA,KACTD,IAAiB,EACjBC,GAAkB,EAClBC,GAAoB,IAMxB,IAAIE,GAAS,CAAClG,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAAIA,EAAY,IACtEmG,GAAiB,CACnBD,GAAO,GAAK7D,GACZ6D,GAAO,GAAK7D,GACZ6D,GAAO,GACPA,GAAO,GACPA,GAAO,GAAK7D,GACZ6D,GAAO,GAAK7D,IAEV+D,GAAiB,CACnBF,GAAO,GAAK7D,GACZ6D,GAAO,GAAK7D,GACZ6D,GAAO,GACPA,GAAO,GACPA,GAAO,GAAK7D,GACZ6D,GAAO,GAAK7D,IAEVgE,GAAa,CAACH,GAAO,GAAIA,GAAO,IAChCI,GAAkB,CACpBJ,GAAO,GACPA,GAAO,GACPA,GAAO,GAAK5D,GACZ4D,GAAO,IAELK,GAAkB,CACpBL,GAAO,GACPA,GAAO,GACPA,GAAO,GAAK5D,GACZ4D,GAAO,IAELM,GACFlP,EAAMS,MACJT,EAAMmG,QAAU,GAAK,KAAOnG,EAAMqG,QAAU,KAAuB,GAAhBrG,EAAMuG,QAAe,MAGxE3E,KAAKC,MAAuB,KAAjBsG,GAAyB,MAIpCgH,GACFnP,EAAMkC,SACJ,CACEgG,EAAYA,EAAY9H,OAAS,IACjC8H,EAAYA,EAAY9H,OAAS,KAGnC,CACE8H,EAAYA,EAAY9H,OAAS,GACjC8H,EAAYA,EAAY9H,OAAS,IAGnCgP,GAAS,CACXD,GAAY,GACZA,GAAY,GACZA,GAAY,GAAKnI,EAAWsC,EAC5B6F,GAAY,GACZA,GAAY,GACZA,GAAY,GAAKlI,EAAYqC,GAG3B+F,GACFrP,EAAMkC,SACJ,CACEgG,EAAYA,EAAY9H,OAAS,IAAO4G,EAAW,EAAKsC,EACxD8F,GAAO,IAGX,CACElH,EAAYA,EAAY9H,OAAS,GAAM4G,EAAW,EAAKsC,EACvD8F,GAAO,IAGPzJ,IAAc/D,KAAKoG,KAAKf,EAAYD,IAAa,IAAMpF,KAAK4G,KAAK+F,QAAQ,IAEzE5I,GAAa,IAAM2B,GAAS,KAE5B+H,GADErP,EAAMkC,SACK,CACXgG,EAAYA,EAAY9H,OAAS,IAAO4G,EAAW,EAAKsC,EAAQ,GAChE8F,GAAO,IAGI,CACXlH,EAAYA,EAAY9H,OAAS,GAAM4G,EAAW,EAAKsC,EAAQ,GAC/D8F,GAAO,KAMb,IAAIE,GACFtP,EAAMkC,SACJ,CAACgG,EAAYA,EAAY9H,OAAS,GAAI8H,EAAYA,EAAY9H,OAAS,KAGvE,CAAC8H,EAAY,GApjCH,GAojCgBoB,EAAOpB,EAAYA,EAAY9H,OAAS,IAGlEmP,GAAWvP,EAAMkC,SAAYoF,EAAUA,EAAQ,EAE/CkI,GACFxP,EAAMkC,SACJN,KAAKiK,OAAO3D,EAAY,IAAMA,EAAY,KAAOoB,GAGjD1H,KAAKiK,OAAO3D,EAAY,GAAKA,EAAY,KAAOoB,GAGhDmG,GACFzP,EAAMkC,SACJN,KAAKC,MAA2E,QAAlEqG,EAAY,IAAMA,EAAY,KAAOoB,EAASkG,KAG5D5N,KAAKC,MAA0E,QAAjEqG,EAAY,GAAKA,EAAY,KAAOoB,EAASkG,KAG3DE,GACF1P,EAAMkC,SACJN,KAAKC,OAAQqG,EAAY,IAAMA,EAAY,KAAOoB,EAAS,MAG3D1H,KAAKC,OAAQqG,EAAY,GAAKA,EAAY,KAAOoB,EAAS,MAG1DqG,GACF3P,EAAMkC,SACJN,KAAKiK,OAAO3D,EAAY,IAAMA,EAAY,IAAMoB,GAGhD1H,KAAKiK,OAAO3D,EAAY,IAAMA,EAAY,KAAOoB,GAGjDsG,GACF5P,EAAMkC,SACJN,KAAKC,MAA0E,QAAjEqG,EAAY,IAAMA,EAAY,IAAMoB,EAASkG,KAG3D5N,KAAKC,MAA2E,QAAlEqG,EAAY,IAAMA,EAAY,KAAOoB,EAASkG,KAG5DK,GACF7P,EAAMkC,SACJN,KAAKC,OAAQqG,EAAY,IAAMA,EAAY,IAAMoB,EAAS,MAG1D1H,KAAKC,OAAQqG,EAAY,IAAMA,EAAY,KAAOoB,EAAS,MAG3DwG,GACA9P,EAAMS,MACJ8O,GAAW,aAAeI,GAAoB,KAAOC,GAAoB,MAGzEL,GAAW,aAAeM,GAAoB,MAGhDE,GACA/P,EAAMS,MACJ8O,GAAW,YAAcC,GAAmB,KAAOC,GAAmB,MAGtEF,GAAW,YAAcG,GAAmB,MAI9CM,GAAS,GACTC,GACFnJ,EAAMiC,QACJ,CAAC,GAAI,IAGL,CAAC,EAAG,IAIJmH,GAAgB,GAChBC,GAAiB,UACjB7B,GAAiB,IAAMzF,GACzBsH,GAAiB,UACjBD,GAAgB,eAChBF,GAAOvH,KAAKyH,KAEZC,GAAiB,UAInB,IAAIC,IAAa,EACA,KAAbpJ,GAAsC,IAAnBhH,EAAM8E,WAC3BsL,IAAa,GAEf,IAAIC,GAAW,GACXrJ,EAAW,IAAMoJ,KACnBC,GAAW,qBACXL,GAAOvH,KAAK4H,KAId,IAAIC,GAAa,GACbC,GAAc,WACd5K,GAAa,IAAMA,GAAa,MAClC2K,GAAa,0CACbC,GAAc,UACdP,GAAOvH,KAAK6H,KAId,IAAIE,GAAY,GACZvJ,EAAY,IACduJ,GAAY,sBACZR,GAAOvH,KAAK+H,KAId,IAAIC,GAAW,GAYf,OAXsB,IAAlBT,GAAO5P,OACTqQ,GAAWT,GAAO,GACS,IAAlBA,GAAO5P,OAChBqQ,GAAWT,GAAO,GAAK,WAAQA,GAAO,GACX,IAAlBA,GAAO5P,OAChBqQ,GAAWT,GAAO,GAAK,WAAQA,GAAO,GAAK,WAAQA,GAAO,GAC/B,IAAlBA,GAAO5P,SAChBqQ,GAAWT,GAAO,GAAK,WAAQA,GAAO,GAAK,WAAQA,GAAO,GAAK,WAAQA,GAAO,IAK9E,kBAAC,QAAD,CAAOU,MAAO5H,EAAa6H,OAAQ1H,GACjC,kBAAC,QAAD,MACsB,IAAnBjJ,EAAMkC,UACL,kBAAC,OAAD,CACE0O,EAAGjH,EAAK,GAAKmB,GAAgB,GAC7B+F,EAAGlH,EAAK,GAAKmB,GAAgB,GAAM7D,EAAYqC,EAC/CoH,MA7rCI,GA6rCapH,EACjBqH,OAAQxI,EAAiBmB,EACzBwH,KAAK,QACLC,OAAO,QACP3F,YAAaA,KAGhBpL,EAAMkC,UACL,kBAAC,OAAD,CACE0O,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQnG,GACRkG,OAAO,QACP3F,YAAaA,GACb6F,QAAQ,QACRC,SAAS,QACTC,OAAO,SAGVnR,EAAMoR,YACL,kBAAC,OAAD,CACER,EAAGX,GAAU,GACbY,EAAGZ,GAAU,GACboB,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KAAMd,GACNe,MAAM,SAGV,kBAAC,OAAD,CACEZ,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQ9I,EACR6I,OAAO,QACP3F,YAAaA,GACb6F,QAAQ,QACRC,SAAS,QACTC,OAAO,SAERtI,GACC,kBAAC,OAAD,CACE+H,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQtI,EACRqI,OAAO,QACP3F,YAAaA,GACb6F,QAAQ,QACRC,SAAS,QACTC,OAAO,SAGVnR,EAAMmE,SACL,kBAAC,OAAD,CACEyM,EAAGhG,GAAS,GACZiG,EAAGjG,GAAS,GACZ8F,MAAO3G,EAAcF,EACrB8G,OAAQ/G,EACRkH,KAAK,QACLC,OAAO,QACP3F,YAAaA,KAGhBpL,EAAMmE,SACL,YAAIjE,MAAMyK,GAAc,IAAI8G,KAAI,SAACC,EAAGzQ,GAAJ,OAC9B,kBAAC,OAAD,CACEE,IAAKF,EACL2P,EAAGrG,EAAStJ,GACZ4P,EAAGpG,EAASxJ,GACZyP,MAAO3G,EACP4G,OAAQ/G,EACRkH,KAAK,QACLC,OAAO,QACP3F,YAAaA,QAGlBpL,EAAMmE,SACL,YAAIjE,MAAMyK,KAAc8G,KAAI,SAACC,EAAGzQ,GAAJ,OAC1B,kBAAC,OAAD,CACEE,IAAKF,EACL2P,EAAGvG,EAAQpJ,GACX4P,EAAG1G,EAAQlJ,GACXyP,MAAO7G,EACP8G,OAAQ3G,EACR8G,KAAK,QACLC,OAAO,QACP3F,YAAaA,SAIrB,kBAAC,QAAD,KACGpL,EAAMoR,YACL,kBAAC,IAAMxQ,SAAP,KACE,kBAAC,OAAD,CACEgQ,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQ1F,GACRyF,OAAO,UACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACEN,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQzF,GACRwF,OAAO,UACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACEN,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQxF,GACRuF,OAAO,UACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACEN,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQtF,GACRqF,OAAO,QACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,QACTS,KAAMtG,KAER,kBAAC,OAAD,CACEuF,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQrF,GACRoF,OAAO,QACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,QACTS,KAAMtG,KAER,kBAAC,OAAD,CACEqF,MAAO,IACPE,EAAGjH,EAAK,GAAK8B,GAAU,GAAKP,GAC5B2F,EAAGlH,EAAK,GAAK8B,GAAU,GAAK,GAC5B4F,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KAAK,aACLK,SAAU,GACVJ,MAAM,WAER,kBAAC,OAAD,CACEd,MAAO,IACPE,EAAGjH,EAAK,GAAK8B,GAAU,GAAKR,GAC5B4F,EAAGlH,EAAK,GAAK8B,GAAU,GAAK,GAC5B4F,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KACEtF,GAEF2F,SAAU,GACVJ,MAAM,YAIXxR,EAAMoR,YACL,kBAAC,IAAMxQ,SAAP,KACE,kBAAC,OAAD,CACEgQ,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQ9E,GACR6E,OAAO,UACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACEN,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQ7E,GACR4E,OAAO,UACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACEN,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQ5E,GACR2E,OAAO,UACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACEN,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQ1E,GACRyE,OAAO,QACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,QACTS,KAAMtG,KAER,kBAAC,OAAD,CACEuF,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQzE,GACRwE,OAAO,QACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,QACTS,KAAMtG,KAER,kBAAC,OAAD,CACEqF,MAAO,IACPE,EAAGjH,EAAK,GAAK0C,GAAS,GAAK,GAC3BwE,EAAGlH,EAAK,GAAK0C,GAAS,GAAKnB,GAC3BmG,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KAAK,YACLC,MAAM,WAER,kBAAC,OAAD,CACEd,MAAO,IACPE,EAAGjH,EAAK,GAAK0C,GAAS,GAAK,GAC3BwE,EAAGlH,EAAK,GAAK0C,GAAS,GAAKpB,GAC3BoG,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KAAM3E,GACN4E,MAAM,YAIXxR,EAAMoR,YAAcpR,EAAMmE,SACzB,kBAAC,IAAMvD,SAAP,KACE,kBAAC,OAAD,CACEgQ,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQvD,GACRsD,OAAO,QACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,QACTS,KAAMtG,KAER,kBAAC,OAAD,CACEuF,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQtD,GACRqD,OAAO,QACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,QACTS,KAAMtG,KAER,kBAAC,OAAD,CACEqF,MAAO,IACPE,EAAGjH,EAAK,GAAKgE,GAAY,GAAK,GAC9BkD,EAAGlH,EAAK,GAAKgE,GAAY,GAAKxC,GAAWF,GACzCoG,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KAAK,SACLC,MAAM,WAER,kBAAC,OAAD,CACEd,MAAO,IACPE,EAAGjH,EAAK,GAAKgE,GAAY,GAAK,GAC9BkD,EAAGlH,EAAK,GAAKgE,GAAY,GAAKxC,GAAWD,GACzCmG,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KAAM3D,GACN4D,MAAM,YAIXxR,EAAMoR,YAAcvI,GACnB,kBAAC,IAAMjI,SAAP,KACE,kBAAC,OAAD,CACEgQ,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQhC,GACR+B,OAAO,QACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,QACTS,KAAMtG,KAER,kBAAC,OAAD,CACEuF,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQ/B,GACR8B,OAAO,QACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,QACTS,KAAMtG,KAER,kBAAC,OAAD,CACEuF,EAAGjH,EAAK,GAAKqB,GACb6F,EAAGlH,EAAK,GACRqH,OAAQnC,GACRkC,OAAO,UACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACEN,EAAGjH,EAAK,GAAKqB,GACb6F,EAAGlH,EAAK,GACRqH,OAAQlC,GACRiC,OAAO,UACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACEN,EAAGjH,EAAK,GAAKqB,GACb6F,EAAGlH,EAAK,GACRqH,OAAQpC,GACRmC,OAAO,UACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACER,MAAO,IACPE,EAAGjH,EAAK,GAAKqB,GAAc,EAAI4D,GAAO,GAAK5D,GAC3C6F,EAAGlH,EAAK,GAAKoF,GAAW,GACxBsC,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KAAK,kBACLC,MAAM,SAER,kBAAC,OAAD,CACEd,MAAO,IACPE,EAAGjH,EAAK,GAAKqB,GAAc,EAAI4D,GAAO,GAAK5D,GAC3C6F,EAAGlH,EAAK,GAAKoF,GAAW,GAAK5D,GAAW,EACxCkG,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KAAMrC,GACNsC,MAAM,UAIXxR,EAAMoR,YACL,kBAAC,IAAMxQ,SAAP,KACE,kBAAC,OAAD,CACE8P,MAAO,IACPE,EAAGjH,EAAK,GAAK0F,GAAW,IAAMlE,GAAW,GACzC0F,EAAGlH,EAAK,GAAK0F,GAAW,IAAMlE,GAAW,GACzCkG,WAAW,kBACXC,SAAUnG,GACV2F,KAAMP,GACNgB,KAAM5L,GAAa,OACnB6L,MAAM,UAIXxR,EAAMoR,YAAcvI,GACnB,kBAAC,IAAMjI,SAAP,KACE,kBAAC,OAAD,CACEgQ,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQ9C,GACR6C,OAAQZ,GACR/E,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACEN,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQ7C,GACR4C,OAAQZ,GACR/E,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACEN,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQ5C,GACR2C,OAAQZ,GACR/E,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACER,MAAO,IACPE,EAAGjH,EAAK,GAAK0E,GAAc,GAAKpD,GAChC4F,EAAGlH,EAAK,GAAK0E,GAAc,GAAK,GAChCgD,WAAW,kBACXC,SAAUnG,GACV2F,KAAMX,GACNoB,KAAM5C,GACN6C,MAAM,SACNI,SAAU,KAEZ,kBAAC,OAAD,CACElB,MAAO,IACPE,EAAGjH,EAAK,GAAK0E,GAAc,GAAKnD,GAChC2F,EAAGlH,EAAK,GAAK0E,GAAc,GAAK,GAChCgD,WAAW,kBACXC,SAAUnG,GACV2F,KAAMX,GACNoB,KAAK,kBACLC,MAAM,SACNI,SAAU,MAIf5R,EAAMoR,YAAcvI,GAAgBoF,IACnC,kBAAC,OAAD,CACE2C,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQhD,GACR+C,OAAO,QACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,QACTS,KAAMtG,KAGTrL,EAAMoR,YAAchE,IACnB,kBAAC,IAAMxM,SAAP,KACE,kBAAC,OAAD,CACEgQ,EAAGjH,EAAK,GACRkH,EAAGlH,EAAK,GACRqH,OAAQ3D,GACR0D,OAAO,UACP3F,YAAa,IACb6F,QAAQ,QACRC,SAAS,UAEX,kBAAC,OAAD,CACER,MAAO,IACPE,EAAGjH,EAAK,GAAK0D,GAAU,GACvBwD,EAAGlH,EAAK,GAAK0D,GAAU,GACvBgE,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KAAK,iBACLC,MAAM,SAER,kBAAC,OAAD,CACEd,MAAO,IACPE,EAAGjH,EAAK,GAAK0D,GAAU,GACvBwD,EAAGlH,EAAK,GAAK0D,GAAU,GAAKlC,GAAW,EACvCkG,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KAAMhE,GACNiE,MAAM,UAIXxR,EAAMoR,YACL,kBAAC,IAAMxQ,SAAP,KACE,kBAAC,OAAD,CACE8P,MAAO,IACPE,EAAGjH,EAAK,GAAK2F,GAAM,GAAK,IACxBuB,EAAGlH,EAAK,GAAK2F,GAAM,GAAMnE,GAAW,EACpCkG,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KAAMxB,GACNyB,MAAM,UAER,kBAAC,OAAD,CACEd,MAAO,IACPE,EAAGjH,EAAK,GAAK2F,GAAM,GAAK,IACxBuB,EAAGlH,EAAK,GAAK2F,GAAM,GAAMnE,GAAW,EAAKA,GAAW,EACpDkG,WAAW,kBACXC,SAAUnG,GACV2F,KAAK,UACLS,KAAMzB,GACN0B,MAAM,cC3xDLK,EAtBD,SAAC7R,GAEX,IAAI8R,EAAY9R,EAAMS,MAEtB,OACI,6BACI,yBAAKD,UAAU,YAAf,SACCsR,EACG,yBAAKtR,UAAU,+CACX,4BAAQA,UAAU,qCAAqCoD,QAAS5D,EAAM+R,eAAtE,MACA,4BAAQvR,UAAU,wCAAwCoD,QAAS5D,EAAMgS,eAAzE,OAGJ,yBAAKxR,UAAU,+CACX,4BAAQA,UAAU,uCAAuCoD,QAAS5D,EAAM+R,eAAxE,MACA,4BAAQvR,UAAU,sCAAsCoD,QAAS5D,EAAMgS,eAAvE,SCOLC,EAtBI,SAACjS,GAEhB,IAAIkS,EAAiBlS,EAAMoR,WAE3B,OACI,6BACI,yBAAK5Q,UAAU,YAAf,cACC0R,EACG,yBAAK1R,UAAU,+CACX,4BAAQA,UAAU,qCAAqCoD,QAAS5D,EAAMmS,oBAAtE,MACA,4BAAQ3R,UAAU,wCAAwCoD,QAAS5D,EAAMoS,qBAAzE,QAGJ,yBAAK5R,UAAU,+CACX,4BAAQA,UAAU,uCAAuCoD,QAAS5D,EAAMmS,oBAAxE,MACA,4BAAQ3R,UAAU,sCAAsCoD,QAAS5D,EAAMoS,qBAAvE,UCOLC,EAtBO,SAACrS,GAEnB,IAAIsS,EAActS,EAAMmE,QAExB,OACI,6BACI,yBAAK3D,UAAU,YAAf,mBACC8R,EACG,yBAAK9R,UAAU,+CACX,4BAAQA,UAAU,qCAAqCoD,QAAS5D,EAAMuS,iBAAtE,MACA,4BAAQ/R,UAAU,wCAAwCoD,QAAS5D,EAAMwS,kBAAzE,QAGJ,yBAAKhS,UAAU,+CACX,4BAAQA,UAAU,uCAAuCoD,QAAS5D,EAAMuS,iBAAxE,MACA,4BAAQ/R,UAAU,sCAAsCoD,QAAS5D,EAAMwS,kBAAvE,UCyfLC,E,2MAxfbC,MAAQ,CACN/R,WAAY,IACZa,WAAY,EACZH,WAAY,EACZK,WAAY,OAEZU,YAAa,GACbE,YAAa,EACbE,YAAa,EACbE,YAAa,OAEbW,YAAa,EACbE,YAAa,EACbE,YAAa,EAAI,KAEjBX,WAAY,GACZE,WAAY,EACZE,WAAY,MAEZkC,WAAY,EACZE,WAAY,MACZE,WAAY,SAEZW,QAAS,EACTE,QAAS,EACTE,QAAS,EACTE,QAAS,EAAI,KAEbT,YAAa,EACbyB,eAAgB,EAEhBrD,QAAS,EACT+C,QAAS,EACT5C,QAAS,KAETE,QAAS,EACT4C,QAAS,EACTzC,QAAS,KAETE,SAAU,EACVE,SAAU,GACVE,SAAU,KAEVS,WAAY,KACZ2C,aAAa,EAEbqK,OAAO,EACPC,SAAS,EACTxB,YAAY,EACZ3Q,OAAO,EACP0D,SAAS,EACTjC,UAAU,G,EAIZlB,iBAAmB,SAAA6R,GACjB,EAAKC,SAAS,CACZnS,WAAYkS,EAAME,OAAO7R,MACzByR,OAAO,EACPrK,aAAa,EACbsK,SAAS,K,EAGbxR,iBAAmB,SAAAyR,GACjB,EAAKC,SAAS,CACZtR,WAAYqR,EAAME,OAAO7R,MACzByR,OAAO,EACPrK,aAAa,EACbsK,SAAS,K,EAGbtR,iBAAmB,SAAAuR,GACjB,EAAKC,SAAS,CACZzR,WAAYwR,EAAME,OAAO7R,MACzByR,OAAO,EACPrK,aAAa,EACbsK,SAAS,K,EAGb5Q,iBAAmB,SAAA6Q,GACjB,EAAKC,SAAS,CACZpR,WAAYmR,EAAME,OAAO7R,MACzByR,OAAO,EACPrK,aAAa,EACbsK,SAAS,K,EAKbvQ,kBAAoB,SAAAwQ,GAClB,EAAKC,SAAS,CACZ1Q,YAAayQ,EAAME,OAAO7R,MAC1ByR,OAAO,EACPrK,aAAa,EACbsK,SAAS,K,EAGbrQ,kBAAoB,SAAAsQ,GAClB,EAAKC,SAAS,CACZxQ,YAAauQ,EAAME,OAAO7R,MAC1ByR,OAAO,EACPrK,aAAa,EACbsK,SAAS,K,EAGbnQ,kBAAoB,SAAAoQ,GAClB,EAAKC,SAAS,CACZtQ,YAAaqQ,EAAME,OAAO7R,MAC1ByR,OAAO,EACPrK,aAAa,EACbsK,SAAS,K,EAGbjQ,kBAAoB,SAAAkQ,GAClB,EAAKC,SAAS,CACZpQ,YAAamQ,EAAME,OAAO7R,MAC1ByR,OAAO,EACPrK,aAAa,EACbsK,SAAS,K,EAKb7P,iBAAmB,SAAA8P,GACjB,EAAKC,SAAS,CACZhQ,WAAY+P,EAAME,OAAO7R,MACzBoH,aAAa,EACbsK,SAAS,K,EAGb3P,iBAAmB,SAAA4P,GACjB,EAAKC,SAAS,CACZ9P,WAAY6P,EAAME,OAAO7R,MACzBoH,aAAa,EACbsK,SAAS,K,EAGbzP,iBAAmB,SAAA0P,GACjB,EAAKC,SAAS,CACZ5P,WAAY2P,EAAME,OAAO7R,MACzBoH,aAAa,EACbsK,SAAS,K,EAKbtP,kBAAoB,SAAAuP,GAClB,EAAKC,SAAS,CACZzP,YAAawP,EAAME,OAAO7R,MAC1BoH,aAAa,EACbsK,SAAS,K,EAGbpP,kBAAoB,SAAAqP,GAClB,EAAKC,SAAS,CACZvP,YAAasP,EAAME,OAAO7R,MAC1BoH,aAAa,EACbsK,SAAS,K,EAGblP,kBAAoB,SAAAmP,GAClB,EAAKC,SAAS,CACZrP,YAAaoP,EAAME,OAAO7R,MAC1BoH,aAAa,EACbsK,SAAS,K,EAKbvN,iBAAmB,SAAAwN,GACjB,EAAKC,SAAS,CAAE1N,WAAYyN,EAAME,OAAO7R,S,EAG3CqE,iBAAmB,SAAAsN,GACjB,EAAKC,SAAS,CAAExN,WAAYuN,EAAME,OAAO7R,S,EAE3CuE,iBAAmB,SAAAoN,GACjB,EAAKC,SAAS,CAAEtN,WAAYqN,EAAME,OAAO7R,S,EAI3CkF,cAAgB,SAAAyM,GACd,EAAKC,SAAS,CAAE3M,QAAS0M,EAAME,OAAO7R,S,EAGxCoF,cAAgB,SAAAuM,GACd,EAAKC,SAAS,CAAEzM,QAASwM,EAAME,OAAO7R,S,EAGxCsF,cAAgB,SAAAqM,GACd,EAAKC,SAAS,CAAEvM,QAASsM,EAAME,OAAO7R,S,EAExCwF,cAAgB,SAAAmM,GACd,EAAKC,SAAS,CAAErM,QAASoM,EAAME,OAAO7R,S,EAIxC+E,qBAAuB,SAAA4M,GACrB,EAAKC,SAAS,CACZrL,eAAgBoL,EAAME,OAAO7R,S,EAKjCmD,cAAgB,SAAAwO,GACd,EAAKC,SAAS,CACZ1O,QAASyO,EAAME,OAAO7R,S,EAG1BoD,cAAgB,SAAAuO,GACd,EAAKC,SAAS,CACZ3L,QAAS0L,EAAME,OAAO7R,S,EAG1BsD,cAAgB,SAAAqO,GACd,EAAKC,SAAS,CACZvO,QAASsO,EAAME,OAAO7R,S,EAK1BwD,cAAgB,SAAAmO,GACd,EAAKC,SAAS,CACZrO,QAASoO,EAAME,OAAO7R,S,EAG1ByD,cAAgB,SAAAkO,GACd,EAAKC,SAAS,CACZzL,QAASwL,EAAME,OAAO7R,S,EAG1B2D,cAAgB,SAAAgO,GACd,EAAKC,SAAS,CACZlO,QAASiO,EAAME,OAAO7R,S,EAK1B6D,eAAiB,SAAA8N,GACf,EAAKC,SAAS,CACZhO,SAAU+N,EAAME,OAAO7R,S,EAG3B+D,eAAiB,SAAA4N,GACf,EAAKC,SAAS,CACZ9N,SAAU6N,EAAME,OAAO7R,S,EAG3BiE,eAAiB,SAAA0N,GACf,EAAKC,SAAS,CACZ5N,SAAU2N,EAAME,OAAO7R,S,EAK3B6Q,cAAgB,WACd,EAAKe,SAAS,CACZrS,OAAO,K,EAGXuR,cAAgB,WACd,EAAKc,SAAS,CACZrS,OAAO,K,EAGX0R,mBAAqB,WACnB,EAAKW,SAAS,CACZ1B,YAAY,K,EAGhBgB,oBAAsB,WACpB,EAAKU,SAAS,CACZ1B,YAAY,K,EAGhBmB,gBAAkB,WAChB,EAAKO,SAAS,CACZ3O,SAAS,K,EAGbqO,iBAAmB,WACjB,EAAKM,SAAS,CACZ3O,SAAS,K,EAGbN,iBAAmB,WACjB,EAAKiP,SAAS,CACZ5Q,UAAU,K,EAGd4B,kBAAoB,WAClB,EAAKgP,SAAS,CACZ5Q,UAAU,K,EAMd2D,iBAAmB,SAAAgN,GACjB,EAAKC,SAAS,CACZxK,aAAa,EACb3C,WAAYkN,EAAME,OAAO7R,S,wEAK3B,OACE,yBAAKV,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKK,GAAG,UAAUL,UAAU,mBAC1B,yBAAKA,UAAU,4CACb,yBAAKA,UAAU,SAAf,WACA,kBAAC,EAAD,CACEC,MAAOuS,KAAKN,MAAMjS,MAClBsR,cAAeiB,KAAKjB,cACpBC,cAAegB,KAAKhB,gBAEtB,kBAAC,EAAD,CACEZ,WAAY4B,KAAKN,MAAMtB,WACvBe,mBAAoBa,KAAKb,mBACzBC,oBAAqBY,KAAKZ,sBAE5B,kBAAC,EAAD,CACEjO,QAAS6O,KAAKN,MAAMvO,QACpBoO,gBAAiBS,KAAKT,gBACtBC,iBAAkBQ,KAAKR,mBAEzB,kBAAC,EAAD,CACEtQ,SAAU8Q,KAAKN,MAAMxQ,SACrB2B,iBAAkBmP,KAAKnP,iBACvBC,kBAAmBkP,KAAKlP,qBAI5B,yBAAKtD,UAAU,6BAEf,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,SAAf,YACA,kBAAC,EAAD,CACEG,WAAYqS,KAAKN,MAAM/R,WACvBa,WAAYwR,KAAKN,MAAMlR,WACvBH,WAAY2R,KAAKN,MAAMrR,WACvBK,WAAYsR,KAAKN,MAAMhR,WACvBV,iBAAkBgS,KAAKhS,iBACvBI,iBAAkB4R,KAAK5R,iBACvBE,iBAAkB0R,KAAK1R,iBACvBU,iBAAkBgR,KAAKhR,iBACvBiR,uBAAwBD,KAAKC,uBAC7BC,wBAAyBF,KAAKE,wBAC9BzS,MAAOuS,KAAKN,MAAMjS,QAEpB,kBAAC,EAAD,CACE2B,YAAa4Q,KAAKN,MAAMtQ,YACxBE,YAAa0Q,KAAKN,MAAMpQ,YACxBE,YAAawQ,KAAKN,MAAMlQ,YACxBE,YAAasQ,KAAKN,MAAMhQ,YACxBL,kBAAmB2Q,KAAK3Q,kBACxBE,kBAAmByQ,KAAKzQ,kBACxBE,kBAAmBuQ,KAAKvQ,kBACxBE,kBAAmBqQ,KAAKrQ,kBACxBlC,MAAOuS,KAAKN,MAAMjS,MAClByB,SAAU8Q,KAAKN,MAAMxQ,WAEvB,kBAAC,EAAD,CACEY,WAAYkQ,KAAKN,MAAM5P,WACvBE,WAAYgQ,KAAKN,MAAM1P,WACvBE,WAAY8P,KAAKN,MAAMxP,WACvBH,iBAAkBiQ,KAAKjQ,iBACvBE,iBAAkB+P,KAAK/P,iBACvBE,iBAAkB6P,KAAK7P,iBACvB1C,MAAOuS,KAAKN,MAAMjS,QAEpB,kBAAC,EAAD,CACE4C,YAAa2P,KAAKN,MAAMrP,YACxBE,YAAayP,KAAKN,MAAMnP,YACxBE,YAAauP,KAAKN,MAAMjP,YACxBH,kBAAmB0P,KAAK1P,kBACxBE,kBAAmBwP,KAAKxP,kBACxBE,kBAAmBsP,KAAKtP,kBACxBjD,MAAOuS,KAAKN,MAAMjS,SAItB,yBAAKD,UAAU,6BAEf,kBAAC,EAAD,CACE4D,QAAS4O,KAAKN,MAAMtO,QACpB+C,QAAS6L,KAAKN,MAAMvL,QACpB5C,QAASyO,KAAKN,MAAMnO,QACpBE,QAASuO,KAAKN,MAAMjO,QACpB4C,QAAS2L,KAAKN,MAAMrL,QACpBzC,QAASoO,KAAKN,MAAM9N,QACpBE,SAAUkO,KAAKN,MAAM5N,SACrBE,SAAUgO,KAAKN,MAAM1N,SACrBE,SAAU8N,KAAKN,MAAMxN,SACrBb,cAAe2O,KAAK3O,cACpBC,cAAe0O,KAAK1O,cACpBE,cAAewO,KAAKxO,cACpBE,cAAesO,KAAKtO,cACpBC,cAAeqO,KAAKrO,cACpBE,cAAemO,KAAKnO,cACpBE,eAAgBiO,KAAKjO,eACrBE,eAAgB+N,KAAK/N,eACrBE,eAAgB6N,KAAK7N,eACrBE,iBAAkB2N,KAAK3N,iBACvBE,iBAAkByN,KAAKzN,iBACvBE,iBAAkBuN,KAAKvN,iBACvBL,WAAY4N,KAAKN,MAAMtN,WACvBE,WAAY0N,KAAKN,MAAMpN,WACvBE,WAAYwN,KAAKN,MAAMlN,WACvBrB,QAAS6O,KAAKN,MAAMvO,QACpB1D,MAAOuS,KAAKN,MAAMjS,QAGpB,yBAAKD,UAAU,6BAEf,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,SAAf,YACA,kBAAC,EAAD,CACEG,WAAYqS,KAAKN,MAAM/R,WACvBa,WAAYwR,KAAKN,MAAMlR,WACvBH,WAAY2R,KAAKN,MAAMrR,WACvBK,WAAYsR,KAAKN,MAAMhR,WACvB+F,eAAgBuL,KAAKN,MAAMjL,eAC3BxB,qBAAsB+M,KAAK/M,qBAC3BxF,MAAOuS,KAAKN,MAAMjS,QAEpB,kBAAC,EAAD,CACE0F,QAAS6M,KAAKN,MAAMvM,QACpBE,QAAS2M,KAAKN,MAAMrM,QACpBE,QAASyM,KAAKN,MAAMnM,QACpBE,QAASuM,KAAKN,MAAMjM,QACpBL,cAAe4M,KAAK5M,cACpBE,cAAe0M,KAAK1M,cACpBE,cAAewM,KAAKxM,cACpBE,cAAesM,KAAKtM,cACpBjG,MAAOuS,KAAKN,MAAMjS,SAItB,yBAAKD,UAAU,6BAEf,kBAAC,EAAD,CACEsC,WAAYkQ,KAAKN,MAAM5P,WACvBE,WAAYgQ,KAAKN,MAAM1P,WACvBK,YAAa2P,KAAKN,MAAMrP,YACxBE,YAAayP,KAAKN,MAAMnP,YACxBsC,iBAAkBmN,KAAKnN,iBACvBF,WAAYqN,KAAKN,MAAM/M,cAI3B,yBAAK9E,GAAG,YAAYL,UAAU,oBAC5B,kBAAC,EAAD,CACEC,MAAOuS,KAAKN,MAAMjS,MAClBE,WAAYqS,KAAKN,MAAM/R,WACvBa,WAAYwR,KAAKN,MAAMlR,WACvBH,WAAY2R,KAAKN,MAAMrR,WACvBK,WAAYsR,KAAKN,MAAMhR,WACvBU,YAAa4Q,KAAKN,MAAMtQ,YACxBE,YAAa0Q,KAAKN,MAAMpQ,YACxBE,YAAawQ,KAAKN,MAAMlQ,YACxBE,YAAasQ,KAAKN,MAAMhQ,YACxBI,WAAYkQ,KAAKN,MAAM5P,WACvBE,WAAYgQ,KAAKN,MAAM1P,WACvBE,WAAY8P,KAAKN,MAAMxP,WACvBG,YAAa2P,KAAKN,MAAMrP,YACxBE,YAAayP,KAAKN,MAAMnP,YACxBE,YAAauP,KAAKN,MAAMjP,YACxB8D,aAAcyL,KAAKN,MAAMC,MACzBpD,SAAUyD,KAAKN,MAAMnD,SACrB4D,UAAWH,KAAKN,MAAMS,UACtB/N,WAAY4N,KAAKN,MAAMtN,WACvBE,WAAY0N,KAAKN,MAAMpN,WACvBE,WAAYwN,KAAKN,MAAMlN,WACvBW,QAAS6M,KAAKN,MAAMvM,QACpBE,QAAS2M,KAAKN,MAAMrM,QACpBE,QAASyM,KAAKN,MAAMnM,QACpBE,QAASuM,KAAKN,MAAMjM,QACpBgB,eAAgBuL,KAAKN,MAAMjL,eAC3B2L,cAAeJ,KAAKN,MAAMU,cAC1BhP,QAAS4O,KAAKN,MAAMtO,QACpB+C,QAAS6L,KAAKN,MAAMvL,QACpB5C,QAASyO,KAAKN,MAAMnO,QACpBE,QAASuO,KAAKN,MAAMjO,QACpB4C,QAAS2L,KAAKN,MAAMrL,QACpBzC,QAASoO,KAAKN,MAAM9N,QACpBE,SAAUkO,KAAKN,MAAM5N,SACrBE,SAAUgO,KAAKN,MAAM1N,SACrBE,SAAU8N,KAAKN,MAAMxN,SACrBf,QAAS6O,KAAKN,MAAMvO,QACpBiN,WAAY4B,KAAKN,MAAMtB,WACvBzL,WAAYqN,KAAKN,MAAM/M,WACvB2C,YAAa0K,KAAKN,MAAMpK,YACxBD,aAAc2K,KAAKN,MAAME,QACzB1Q,SAAU8Q,KAAKN,MAAMxQ,kB,GAhfjBmR,aCLEC,QACW,cAA7B1M,OAAO2M,SAASC,UAEe,UAA7B5M,OAAO2M,SAASC,UAEhB5M,OAAO2M,SAASC,SAASC,MACvB,2D,mBCNNC,EAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,oBAEbC,OAAQ,WAPRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,YD0H7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1f8e138e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TotalRun = (props) => {\r\n\r\n    let selectFeet = Array.from({length:15-1+1},(v,k)=>k+1);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n    let selectInchesMin = Array.from({length:2-1+1},(v,k)=>k+10);\r\n\r\n    let min = 22 * 25.4;\r\n    let max = 191.9375 * 25.4;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total run</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n            {props.units ? (\r\n                parseInt(props.totalRunft) === 12 ? (\r\n                    <React.Fragment>\r\n                        <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft} className=\"dropdown dropdown__feet\">\r\n                            {Array.from(selectFeet, (i) => {\r\n                                return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select id=\"totalRunInches\" defaultValue={10} onChange={props.changetotalRunin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(selectInchesMin, (i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                ) :\r\n                (\r\n                    <React.Fragment>\r\n                        <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft} className=\"dropdown dropdown__feet\">\r\n                            {Array.from(selectFeet, (i) => {\r\n                                return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select id=\"totalRunInches\" defaultValue={props.totalRunin} onChange={props.changetotalRunin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(Array(selectInches), (e, i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                )\r\n            ):\r\n            (\r\n                parseFloat(props.totalRunmm) >= 558.8 && parseFloat(props.totalRunmm) <= 4875.2125 ? (\r\n                    <input type=\"number\" defaultValue={Math.round(props.totalRunmm)} min={min} max={max} onChange={props.changetotalRunmm} className=\"dropdown dropdown__mm\" />\r\n                ):\r\n                (\r\n                    <input type=\"number\" defaultValue={Math.round(props.totalRunmm)} min={min} max={max} onChange={props.changetotalRunmm} className=\"dropdown--red dropdown__mm\" />\r\n                )\r\n            )}\r\n\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRun","import React from 'react';\r\n\r\nconst TotalRise = (props) => {\r\n\r\n    let selectFeet = props.topStair ? Array.from({length:11-1+1},(v,k)=>k) : Array.from({length:10-1+1},(v,k)=>k+1)\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    let minMM = 22 * 25.4;\r\n    let maxMM = 191.9375 * 25.4;\r\n\r\n    let minRisein = props.topStair ? 8 : 6;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total rise</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n            {props.units ? (\r\n                props.topStair ? (\r\n                    parseInt(props.totalRiseft) === 0 ? (\r\n                        <React.Fragment>\r\n                            <select id=\"totalRiseft\" defaultValue={props.totalRiseft} onChange={props.changetotalRiseft} className=\"dropdown dropdown__feet\">\r\n                                {Array.from(selectFeet, (i) => {\r\n                                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                                })}\r\n                            </select>\r\n                            <select id=\"totalRisein\" defaultValue={props.totalRisein} onChange={props.changetotalRisein} className=\"dropdown dropdown__inch\">\r\n                                <option value={minRisein} key={minRisein}>{minRisein +'\"'}</option>\r\n                            </select>\r\n                            <select id=\"totalRiseft\" defaultValue={props.totalRisefr} onChange={props.changetotalRisefr} className=\"dropdown dropdown__fraction\">\r\n                                {Array.from(Array(selectFractions), (e, i) => {\r\n                                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                                })}\r\n                            </select>\r\n                        </React.Fragment>\r\n                    ):\r\n                    (\r\n                        <React.Fragment>\r\n                            <select id=\"totalRiseft\" defaultValue={props.totalRiseft} onChange={props.changetotalRiseft} className=\"dropdown dropdown__feet\">\r\n                                {Array.from(selectFeet, (i) => {\r\n                                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                                })}\r\n                            </select>\r\n                            <select id=\"totalRisein\" defaultValue={props.totalRisein} onChange={props.changetotalRisein} className=\"dropdown dropdown__inch\">\r\n                                {Array.from(Array(selectInches), (e, i) => {\r\n                                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                                })}\r\n                            </select>\r\n                            <select id=\"totalRiseft\" defaultValue={props.totalRisefr} onChange={props.changetotalRisefr} className=\"dropdown dropdown__fraction\">\r\n                                {Array.from(Array(selectFractions), (e, i) => {\r\n                                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                                })}\r\n                            </select>\r\n                        </React.Fragment>\r\n                    )\r\n                ):\r\n                (\r\n                    <React.Fragment>\r\n                        <select id=\"totalRiseft\" defaultValue={props.totalRiseft} onChange={props.changetotalRiseft} className=\"dropdown dropdown__feet\">\r\n                            {Array.from(selectFeet, (i) => {\r\n                                return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select id=\"totalRisein\" defaultValue={props.totalRisein} onChange={props.changetotalRisein} className=\"dropdown dropdown__inch\">\r\n                        {Array.from(Array(selectInches), (e, i) => {\r\n                                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                                })}\r\n                        </select>\r\n                        <select id=\"totalRiseft\" defaultValue={props.totalRisefr} onChange={props.changetotalRisefr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                )\r\n            ):\r\n            (\r\n                parseFloat(props.totalRisemm) >= 279.4 && parseFloat(props.totalRisemm) <= 3351.2125 ? (\r\n                    <input type=\"number\" defaultValue={Math.round(props.totalRisemm)} min={minMM} max={maxMM} onChange={props.changetotalRisemm} className=\"dropdown dropdown__mm\" />\r\n                ):\r\n                (\r\n                    <input type=\"number\" defaultValue={Math.round(props.totalRisemm)} min={minMM} max={maxMM} onChange={props.changetotalRisemm} className=\"dropdown--red dropdown__mm\" />\r\n                )\r\n            )}\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRise","import React from 'react';\r\n\r\nconst IdealRun = (props) => {\r\n\r\n    let selectInches = Array.from({length:24-10+1},(v,k)=>k+10);\r\n    let selectFractions = 16;\r\n\r\n    let idealMin = 10 * 25.4;\r\n    let idealMax = (24 + 0.0625 * 15) * 25.4;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Ideal run</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                {props.units ? (\r\n                    <React.Fragment>\r\n                        <select value={props.idealRunin} onChange={props.changeidealRunin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(selectInches, (i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select value={props.idealRunfr} onChange={props.changeidealRunfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                ):\r\n                (\r\n                    parseFloat(props.idealRunmm) >= 254 && parseFloat(props.idealRunmm) <=  288.9375? (\r\n                        <input type=\"number\" defaultValue={Math.round(props.idealRunmm)} min={idealMin} max={idealMax} onChange={props.changeidealRunmm} className=\"dropdown dropdown__mm\" />\r\n                    ):\r\n                    (\r\n                        <input type=\"number\" defaultValue={Math.round(props.idealRunmm)} min={idealMin} max={idealMax} onChange={props.changeidealRunmm} className=\"dropdown--red dropdown__mm\" />\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default IdealRun","import React from 'react';\r\n\r\nconst IdealRise = (props) => {\r\n\r\n    let selectInches = Array.from({length:7-4+1},(v,k)=>k+4);\r\n    let selectFractions = 13;\r\n\r\n    let idealMin = 4 * 25.4;\r\n    let idealMax = (7 + 0.0625 * 12) * 25.4;\r\n\r\n    return (\r\n        <div className=\"select-wrapper\">\r\n            <label className=\"subtitle d-flex\">Ideal rise</label>\r\n            <div className=\"dropdown__parent d-flex justify-content-start\">\r\n                {props.units ? (\r\n                    <React.Fragment>\r\n                        <select value={props.idealRisein} onChange={props.changeidealRisein} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(selectInches, (i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select value={props.idealRisefr} onChange={props.changeidealRisefr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                ):\r\n                (\r\n                    parseFloat(props.idealRisemm) >= 101.6 && parseFloat(props.idealRisemm) <= 196.85 ? (\r\n                        <input type=\"number\" defaultValue={Math.round(props.idealRisemm)} min={idealMin} max={idealMax} onChange={props.changeidealRisemm} className=\"dropdown dropdown__mm\" />\r\n                    ):\r\n                    (\r\n                        <input type=\"number\" defaultValue={Math.round(props.idealRisemm)} min={idealMin} max={idealMax} onChange={props.changeidealRisemm} className=\"dropdown--red dropdown__mm\" />\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default IdealRise","import React from 'react';\r\n\r\nconst Topstair = (props) => {\r\n\r\n    let topStair = props.topStair;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Top Stair</div>\r\n            {topStair ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeTopStairOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeTopStairOff}>OFF</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeTopStairOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeTopStairOff}>OFF</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topstair","import React from 'react';\r\n\r\nconst Details = (props) => {\r\n    \r\n    let treadInches = 1 + 1;\r\n    let nosingInches = 1 + 1;\r\n    let nosingFractionsMin = Array.from({length:12-5+1},(v,k)=>k+8);\r\n    let nosingFractionsMax = Array.from({length:13-5+1},(v,k)=>k+0);\r\n    let selectFractions = 16;\r\n    let stringerInches = Array.from({length:11-5+1},(v,k)=>k+5);\r\n\r\n    let nosingMin = 0;\r\n    let nosingMax = (1 + (0.0625 * 8)) * 25.4;\r\n\r\n    let treadMin = 0;\r\n    let treadMax = 49.2125;\r\n\r\n    let riserMin = 0;\r\n    let riserMax = 49.2125;\r\n\r\n    let stringerMin = 5 * 25.4;\r\n    let stringerMax = (11 + (0.0625 * 15)) * 25.4;\r\n\r\n    return (\r\n        <div className=\"sidebar__section  sidebar__section--third\">\r\n            <div className=\"title\">Details</div>\r\n            {props.details ? (\r\n                <React.Fragment>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Tread thickness</label>\r\n                <div className=\"d-flex justify-content-start\">\r\n                    {props.units ? (\r\n                        <React.Fragment>\r\n                            <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown dropdown__inch\">\r\n                                {Array.from(Array(treadInches), (e, i) => {\r\n                                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                                })}\r\n                            </select>\r\n                            <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown dropdown__fraction\">\r\n                                {Array.from(Array(selectFractions), (e, i) => {\r\n                                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                                })}\r\n                            </select>\r\n                        </React.Fragment>\r\n                    ):\r\n                    (\r\n                        parseFloat(props.treadmm) <= 49.2125 ? (\r\n                            <input type=\"number\" defaultValue={Math.round(props.treadmm)} min={treadMin} max={treadMax} onChange={props.changetreadmm} className=\"dropdown dropdown__mm\" />\r\n                        ):\r\n                        (\r\n                            <input type=\"number\" defaultValue={Math.round(props.treadmm)} min={treadMin} max={treadMax} onChange={props.changetreadmm} className=\"dropdown--red dropdown__mm\" />\r\n                        )\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                {props.units ? (\r\n                    <React.Fragment>\r\n                        <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(Array(treadInches), (e, i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                ):\r\n                (\r\n                    parseFloat(props.risermm) <= 49.2125 ? (\r\n                        <input type=\"number\" defaultValue={Math.round(props.risermm)} min={riserMin} max={riserMax} onChange={props.changerisermm} className=\"dropdown dropdown__mm\" />\r\n                    ):\r\n                    (\r\n                        <input type=\"number\" defaultValue={Math.round(props.risermm)} min={riserMin} max={riserMax} onChange={props.changerisermm} className=\"dropdown--red dropdown__mm\" />\r\n                    )\r\n                )}\r\n            </div>\r\n            {props.units  ? (\r\n                props.nosingin === 0 ? (\r\n                    <div>\r\n                        <label className=\"subtitle d-flex\">Nosing</label>\r\n                        <select defaultValue={0} onChange={props.changenosingin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(Array(nosingInches), (e, i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select defaultValue={props.nosingfr} onChange={props.changenosingfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(nosingFractionsMin, (i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                ):\r\n                (\r\n                    <div>\r\n                        <label className=\"subtitle d-flex\">Nosing</label>\r\n                        <select defaultValue={0} onChange={props.changenosingin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(Array(nosingInches), (e, i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select defaultValue={props.nosingfr} onChange={props.changenosingfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(nosingFractionsMax, (i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                )\r\n\r\n            ):\r\n            (   \r\n                <div>\r\n                    <label className=\"subtitle d-flex\">Nosing</label>\r\n                    {parseFloat(props.nosingmm) >= nosingMin && parseFloat(props.nosingmm) <= nosingMax ? (\r\n                        <input type=\"number\" defaultValue={Math.round(props.nosingmm)} min={nosingMin} max={nosingMax} onChange={props.changenosingmm} className=\"dropdown dropdown__mm\" />\r\n                    ):\r\n                    (\r\n                        <input type=\"number\" defaultValue={Math.round(props.nosingmm)} min={nosingMin} max={nosingMax} onChange={props.changenosingmm} className=\"dropdown--red dropdown__mm\" />\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                {props.units ? (\r\n                    <React.Fragment>\r\n                        <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(stringerInches, (i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                ):\r\n                (\r\n                    parseFloat(props.stringermm) >= stringerMin && parseFloat(props.stringermm) <= stringerMax ? (\r\n                        <input type=\"number\" defaultValue={Math.round(props.stringermm)} min={stringerMin} max={stringerMax} onChange={props.changestringermm} className=\"dropdown dropdown__mm\" />\r\n                    ):\r\n                    (\r\n                        <input type=\"number\" defaultValue={Math.round(props.stringermm)} min={stringerMin} max={stringerMax} onChange={props.changestringermm} className=\"dropdown--red dropdown__mm\" />\r\n                    )\r\n                )}\r\n            </div>\r\n            </React.Fragment>\r\n\r\n            ):\r\n            (\r\n\r\n            <React.Fragment>\r\n                <div>\r\n                    <label className=\"subtitle d-flex\">Tread thickness</label>\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        {props.units ? (\r\n                            <React.Fragment>\r\n                                <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown dropdown__inch disabled\">\r\n                                    {Array.from(Array(treadInches), (e, i) => {\r\n                                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                                    })}\r\n                                </select>\r\n                                <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown dropdown__fraction disabled\">\r\n                                    {Array.from(Array(selectFractions), (e, i) => {\r\n                                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                                    })}\r\n                                </select>\r\n                            </React.Fragment>\r\n                        ):\r\n                        (\r\n                            parseFloat(props.treadmm) <= 49.2125 ? (\r\n                                <input type=\"number\" defaultValue={Math.round(props.treadmm)} min={treadMin} max={treadMax} onChange={props.changetreadmm} className=\"dropdown dropdown__mm\" />\r\n                            ):\r\n                            (\r\n                                <input type=\"number\" defaultValue={Math.round(props.treadmm)} min={treadMin} max={treadMax} onChange={props.changetreadmm} className=\"dropdown--red dropdown__mm\" />\r\n                            )\r\n                        )}\r\n                    </div>                                                          \r\n                </div>\r\n\r\n                <div>\r\n                    <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                    {props.units ? (\r\n                        <React.Fragment>\r\n                            <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown dropdown__inch disabled\">\r\n                                {Array.from(Array(treadInches), (e, i) => {\r\n                                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                                })}\r\n                            </select>\r\n                            <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown dropdown__fraction disabled\">\r\n                                {Array.from(Array(selectFractions), (e, i) => {\r\n                                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                                })}\r\n                            </select>\r\n                        </React.Fragment>\r\n                    ):\r\n                    (\r\n                        parseFloat(props.risermm) <= 49.2125 ? (\r\n                            <input type=\"number\" defaultValue={Math.round(props.risermm)} min={riserMin} max={riserMax} onChange={props.changerisermm} className=\"dropdown dropdown__mm\" />\r\n                        ):\r\n                        (\r\n                            <input type=\"number\" defaultValue={Math.round(props.risermm)} min={riserMin} max={riserMax} onChange={props.changerisermm} className=\"dropdown--red dropdown__mm\" />\r\n                        )   \r\n                    )}\r\n                </div>\r\n                \r\n                <div>\r\n                    <label className=\"subtitle d-flex\">Nosing</label>\r\n                        {props.units ? (\r\n                            <React.Fragment>\r\n                                <select defaultValue=\"0\" onChange={props.changenosingin} className=\"dropdown dropdown__inch disabled\">\r\n                                    {Array.from(Array(nosingInches), (e, i) => {\r\n                                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                                    })}\r\n                                </select>\r\n                                <select defaultValue={props.nosingfr} onChange={props.changenosingfr} className=\"dropdown dropdown__fraction disabled\">\r\n                                    {Array.from(Array(16), (e, i) => {\r\n                                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                                    })}\r\n                                </select>\r\n                            </React.Fragment>\r\n                        ):\r\n                        (\r\n                            <input type=\"number\" defaultValue={Math.round(props.nosingmm)} min={nosingMin} max={nosingMax} onChange={props.changenosingmm} className=\"dropdown dropdown__mm\" />  \r\n                        )}\r\n                </div>\r\n\r\n                <div>\r\n                    <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                        {props.units ? (\r\n                            <React.Fragment>\r\n                                <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown dropdown__inch\">\r\n                                    {Array.from(stringerInches, (i) => {\r\n                                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                                    })}\r\n                                </select>\r\n                                <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown dropdown__fraction\">\r\n                                    {Array.from(Array(selectFractions), (e, i) => {\r\n                                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                                    })}\r\n                                </select>\r\n                            </React.Fragment>\r\n                        ):\r\n                        (\r\n                            <input type=\"number\" defaultValue={Math.round(props.stringermm)} min={stringerMin} max={stringerMax} onChange={props.changestringermm} className=\"dropdown dropdown__mm\" />  \r\n                        )}\r\n                </div>\r\n        \r\n            </React.Fragment>\r\n            )}\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Details ","import React from 'react';\r\n\r\n\r\nconst StairAngle = (props) => {\r\n    \r\n    return (\r\n        <div className=\"sidebar__section--last sidebar__section\">\r\n            <label className=\"title d-flex\">Stair Angle</label>\r\n            <div className=\"d-flex justify-content-between sidebar__section--stairangle\">\r\n                {props.stairAngle >= 25 && props.stairAngle <= 45 ? (\r\n                    <input type=\"number\" value={props.stairAngle} min=\"25\" max=\"45\" step=\"0.1\" onChange={props.changeStairAngle} className=\"stairangle__number dropdown\"/>\r\n                ):\r\n                (\r\n                    <input type=\"number\" value={props.stairAngle} min=\"25\" max=\"45\" step=\"0.1\" onChange={props.changeStairAngle} className=\"stairangle__number dropdown--red\"/>\r\n                )}\r\n                <input type=\"range\" value={props.stairAngle} min=\"25\" max=\"45\" step=\"0.01\" onChange={props.changeStairAngle} className=\"slider slider__angle\"/>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StairAngle","import React from 'react';\r\n\r\nconst Height = (props) => {\r\n\r\n    let totalRun = \r\n        props.units ? (\r\n            parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr)\r\n        ):\r\n        (\r\n            parseFloat(props.totalRunmm)\r\n        )\r\n\r\n    let headroomMax = parseFloat(totalRun / 3);\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Height</label>\r\n            <input type=\"range\" defaultValue=\"0\" min=\"0\" step=\"0.01\" max={headroomMax} onChange={props.changeheadroomlength} className=\"slider slider__height\"/>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Height","import React from 'react';\r\n\r\nconst FloorThickness = (props) => {\r\n\r\n    let maxThickness = 1+1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n    let selectInchesMin = Array.from({length:6-1+1},(v,k)=>k+6);\r\n\r\n    let floorMin = 152.4;\r\n    let floorMax = 608.0125;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Floor Thickness</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                {props.units ? (\r\n                    <React.Fragment>\r\n                        <select defaultValue={props.floorft} onChange={props.changefloorft} className=\"dropdown dropdown__feet\">\r\n                            {Array.from(Array(maxThickness), (e, i) => {\r\n                                return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                            })}\r\n                        </select>\r\n                        {parseInt(props.floorft) === 0 ? (\r\n                        <select defaultValue={props.floorin} onChange={props.changefloorin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(selectInchesMin, (i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        ): \r\n                        (\r\n                        <select defaultValue={props.floorin} onChange={props.changefloorin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(Array(selectInches), (e, i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select> \r\n                        )}\r\n                        <select defaultValue={props.floorfr} onChange={props.changefloorfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                ):\r\n                (\r\n                    parseFloat(props.floormm) >= floorMin && parseFloat(props.floormm) <= floorMax ? (\r\n                        <input type=\"number\" defaultValue={Math.round(props.floormm)} min={floorMin} max={floorMax} onChange={props.changefloormm} className=\"dropdown dropdown__mm\" />\r\n                    ):\r\n                    (\r\n                        <input type=\"number\" defaultValue={Math.round(props.floormm)} min={floorMin} max={floorMax} onChange={props.changefloormm} className=\"dropdown--red dropdown__mm\" />\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FloorThickness","import React from \"react\";\r\nimport { Stage, Layer, Line, Rect, Text } from \"react-konva\";\r\nimport \"../Styles/fonts.css\";\r\n\r\nconst Stair = props => {\r\n\r\n  const smMax = window.matchMedia(\"(max-width: 540px)\");\r\n  const smMin = window.matchMedia(\"(min-width: 540px)\");\r\n\r\n  const mdMax = window.matchMedia(\"(max-width: 720px)\");\r\n  const mdMin = window.matchMedia(\"(min-width: 720px)\");\r\n\r\n  const lgMax = window.matchMedia(\"(max-width: 960px)\");\r\n  const lgMin = window.matchMedia(\"(min-width: 960px)\");\r\n\r\n  const xlMax = window.matchMedia(\"(max-width: 1140px)\");\r\n  const xlMin = window.matchMedia(\"(min-width: 1140px)\");\r\n\r\n  \r\n  let totalRun =\r\n    props.units ? (\r\n      parseInt(props.totalRunft) === 12 ? (\r\n        parseInt(props.totalRunin) === 11 ? (\r\n          23\r\n        ):\r\n        (\r\n          22\r\n        )\r\n      ):\r\n      (\r\n        parseInt(props.totalRunft) +\r\n        parseInt(props.totalRunin) +\r\n        parseFloat(props.totalRunfr)\r\n      )\r\n    ):\r\n    (\r\n      parseFloat(props.totalRunmm) >= 558.8 && parseFloat(props.totalRunmm) <= 4875.2125 ? (\r\n        parseFloat(props.totalRunmm) / 25.4\r\n      ):\r\n      (\r\n        3658 / 25.4\r\n      )\r\n    )\r\n\r\n  let totalRise =\r\n    props.units ? (\r\n      parseInt(props.totalRiseft) === 0 ? (\r\n        11 + (parseFloat(props.totalRisefr) / 16)\r\n      ):\r\n      (\r\n        parseInt(props.totalRiseft) +\r\n        parseInt(props.totalRisein) +\r\n        parseFloat(props.totalRisefr)\r\n      )\r\n    ):\r\n    (\r\n      parseFloat(props.totalRisemm) >= 279.4 && parseFloat(props.totalRisemm) <= 3351.2125 ? (\r\n        parseFloat(props.totalRisemm) / 25.4\r\n      ):\r\n      (\r\n        2743 / 25.4\r\n      )\r\n    )\r\n\r\n  let idealRun = \r\n    props.units ? (\r\n      parseFloat(props.idealRunin) + parseFloat(props.idealRunfr)\r\n    ):\r\n    (\r\n      parseFloat(props.idealRunmm) >= 254 && parseFloat(props.idealRunmm) <=  288.9375 ? (\r\n        parseFloat(props.idealRunmm) / 25.4\r\n      ):\r\n      (\r\n        279.4 / 25.4\r\n      )\r\n    )\r\n\r\n  let idealRise = \r\n    props.units ? (\r\n      parseFloat(props.idealRisein) + parseFloat(props.idealRisefr)\r\n    ):\r\n    (\r\n      parseFloat(props.idealRisemm) >= 101.6 && parseFloat(props.idealRisemm) <= 196.85 ? (\r\n        parseFloat(props.idealRisemm) / 25.4\r\n      ):\r\n      (\r\n        177.8 / 25.4\r\n      )\r\n    )\r\n\r\n  let preTreadThickness = \r\n    props.units ? (\r\n      props.details ? (\r\n        parseFloat(props.treadin) + parseFloat(props.treadfr) \r\n      ):\r\n      ( \r\n        0\r\n      )\r\n    ):\r\n    (\r\n      props.details ? (\r\n        (parseFloat(props.treadmm) / 25.4)\r\n      ):\r\n      ( \r\n        0\r\n      )\r\n    )\r\n\r\n  let preRiserThickness = \r\n    props.units ? (\r\n      props.details ? (\r\n        parseFloat(props.riserin) + parseFloat(props.riserfr) \r\n      ):\r\n      (\r\n        0\r\n      )\r\n    ):\r\n    (\r\n      props.details ? (\r\n        (parseFloat(props.risermm) / 25.4)\r\n      ):\r\n      (\r\n        0\r\n      )\r\n    )\r\n\r\n  if (parseFloat(props.treadmm) >= 0 && parseFloat(props.treadmm) <= 49.2125){\r\n    preTreadThickness = parseFloat(props.treadmm) / 25.4;\r\n  } else {\r\n    preTreadThickness = 1;\r\n  }\r\n  \r\n  if (parseFloat(props.risermm) >= 0 && parseFloat(props.risermm) <= 49.2125){\r\n    preRiserThickness = parseFloat(props.risermm) / 25.4;\r\n  } else {\r\n    preRiserThickness = 1;\r\n  }\r\n\r\n  let count = 0;\r\n\r\n  if (props.totalBoolean === true) {\r\n    count = parseInt(totalRun / idealRun);\r\n  } else if (props.totalBoolean === false) {\r\n    count = parseInt(totalRise / idealRise);\r\n  }\r\n\r\n  let landing = 36;\r\n  let lengthH = \r\n    props.units ? (\r\n      parseFloat(props.headroomLength)\r\n    ):\r\n    (\r\n      (parseFloat(props.headroomLength) / 25.4)\r\n    )\r\n\r\n  let stringerTotal = \r\n    props.units ? (\r\n      parseFloat(props.stringerin) + parseFloat(props.stringerfr)\r\n    ):\r\n    (\r\n      (parseFloat(props.stringermm) / 25.4)\r\n    )\r\n\r\n  if (parseFloat(props.stringermm) >= (5 * 25.4) && parseFloat(props.stringermm) <= ((11 + (0.0625 * 15)) * 25.4)){\r\n    stringerTotal = (parseFloat(props.stringermm) / 25.4);\r\n  } else {\r\n    stringerTotal = (5 + (0.0625 * 15));\r\n  }\r\n  \r\n  let treadTotal =\r\n    props.units ? (\r\n      parseFloat(props.treadin) + parseFloat(props.treadfr)\r\n    ):\r\n    (\r\n      (parseFloat(props.treadmm) / 25.4)\r\n    )\r\n\r\n  if (parseFloat(props.treadmm) >= 0 && parseFloat(props.treadmm) <= 49.2125){\r\n    treadTotal = parseFloat(props.treadmm) / 25.4;\r\n  } else {\r\n    treadTotal = 1;\r\n  }\r\n  \r\n  let riserTotal =\r\n    props.units ? (\r\n      parseFloat(props.riserin) + parseFloat(props.riserfr)\r\n    ):\r\n    (\r\n      (parseFloat(props.risermm) / 25.4)\r\n    )\r\n  \r\n  if (parseFloat(props.risermm) >= 0 && parseFloat(props.risermm) <= 49.2125){\r\n    riserTotal = parseFloat(props.risermm) / 25.4;\r\n  } else {\r\n    riserTotal = 1;\r\n  }\r\n\r\n  let nosingTotal =\r\n    props.units ? (\r\n      parseFloat(props.nosingin) + parseFloat(props.nosingfr)\r\n    ):\r\n    (\r\n      (parseFloat(props.nosingmm) / 25.4)\r\n    )\r\n\r\n  if (parseFloat(props.nosingmm) >= 0 && parseFloat(props.nosingmm) <= 12.7){\r\n    nosingTotal = parseFloat(props.nosingmm) / 25.4;\r\n  } else {\r\n    nosingTotal = 0.5\r\n  }\r\n\r\n  let stringerA =\r\n    stringerTotal / \r\n    Math.sin(Math.atan(idealRun / idealRise));\r\n\r\n  let stringerB =\r\n    stringerTotal / \r\n    Math.sin(Math.atan(idealRise / idealRun));\r\n\r\n  if (props.details) {\r\n    stringerA =\r\n      stringerTotal /\r\n      Math.sin(\r\n        Math.atan(\r\n          (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n        )\r\n      );\r\n    stringerB =\r\n      stringerTotal /\r\n      Math.sin(\r\n        Math.atan(\r\n          (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n        )\r\n      );\r\n  } else {\r\n    stringerA =\r\n      stringerTotal /\r\n      Math.sin(Math.atan(idealRun / idealRise));\r\n    stringerB =\r\n      stringerTotal /\r\n      Math.sin(Math.atan(idealRise / idealRun));\r\n  }\r\n\r\n  let coordinates = [];\r\n\r\n  let floorThickness = \r\n    props.units ? (\r\n      parseInt(props.floorft) === 0 ? (\r\n        parseInt(props.floorin) < 6 ? (\r\n          6\r\n        ):\r\n        (\r\n          props.floorin\r\n        )\r\n      ):\r\n      (\r\n        parseFloat(props.floorft) +\r\n        parseFloat(props.floorin) +\r\n        parseFloat(props.floorfr)\r\n      )\r\n    ):\r\n    (\r\n      parseFloat(props.floormm) / 25.4\r\n    )\r\n\r\n  if (props.units === false){\r\n    if (parseFloat(props.floormm) >= 152.4 && parseFloat(props.floormm) <= 608.0125){\r\n      floorThickness = parseFloat(props.floormm) / 25.4;\r\n    } else {\r\n      floorThickness = 177.8 / 25.4;\r\n    }\r\n  }\r\n\r\n  let preStairAngle = props.stairAngle >=25 && props.stairAngle <= 45 ? props.stairAngle : 32.5;\r\n\r\n  //This creates the stair drawing based on whether total rise or run is being selected\r\n  if (props.totalBoolean === true) {\r\n    //If total run is selected (need to change so that total run changes ideal run)\r\n    if (props.idealBoolean === true) {\r\n      //If ideal is selected\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(preStairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n        stringerTotal /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n          stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n          stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n          stringerTotal /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n          stringerTotal /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRun - idealRun * i,\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n\r\n      //This creates the landing and stringer\r\n      props.topStair ? (\r\n        coordinates.push(\r\n            coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n      ):\r\n      (\r\n        coordinates.push(\r\n          coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n          coordinates[coordinates.length - 1],\r\n          coordinates[2],\r\n          coordinates[5] + stringerA + preTreadThickness,\r\n          coordinates[2],\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          0\r\n        )\r\n      )\r\n  \r\n\r\n    } else {\r\n      count = Math.round(totalRun / 11);\r\n      idealRun = totalRun / count;\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(preStairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            stringerTotal /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            stringerTotal /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRun - idealRun * i,\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n\r\n      //This creates the landing and stringer\r\n      props.topStair ? (\r\n        coordinates.push(\r\n            coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n      ):\r\n      (\r\n        coordinates.push(\r\n          coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n          coordinates[coordinates.length - 1],\r\n          coordinates[2],\r\n          coordinates[5] + stringerA + preTreadThickness,\r\n          coordinates[2],\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          0\r\n        )\r\n      )\r\n        \r\n\r\n    }\r\n  } else if (props.totalBoolean === false) {\r\n    //If total rise is selected (need to change so that total rise changes ideal rise)\r\n    if (props.idealBoolean === true) {\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(preStairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            stringerTotal /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            stringerTotal /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRise - idealRun * i,\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n\r\n      //This creates the landing and stringer\r\n      props.topStair ? (\r\n        coordinates.push(\r\n            coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n      ):\r\n      (\r\n        coordinates.push(\r\n          coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n          coordinates[coordinates.length - 1],\r\n          coordinates[2],\r\n          coordinates[5] + stringerA + preTreadThickness,\r\n          coordinates[2],\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          0\r\n        )\r\n      )\r\n        \r\n\r\n    } else {\r\n      count = \r\n        props.totalRise === 8 ? (\r\n          Math.round(totalRise / 4)\r\n        ):\r\n        (\r\n          Math.round(totalRise / 7)\r\n        )\r\n      idealRise = totalRise / count;\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(preStairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            stringerTotal /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            stringerTotal /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRise - idealRun * i,\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n\r\n      //This creates the landing and stringer\r\n      props.topStair ? (\r\n        coordinates.push(\r\n            coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n      ):\r\n      (\r\n        coordinates.push(\r\n          coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n          coordinates[coordinates.length - 1],\r\n          coordinates[2],\r\n          coordinates[5] + stringerA + preTreadThickness,\r\n          coordinates[2],\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          0\r\n        )\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n  //This is for the headroom part\r\n  let headroomPts = [\r\n    coordinates[coordinates.length - 12] - (idealRun * 3),\r\n    floorThickness,\r\n    coordinates[coordinates.length - 12] - (idealRun * 3),\r\n    0,\r\n    coordinates[coordinates.length - 12] - (idealRun + lengthH),\r\n    0,\r\n    coordinates[coordinates.length - 12] - (idealRun + lengthH),\r\n    floorThickness\r\n  ];\r\n\r\n  console.log(floorThickness);\r\n\r\n  //This part removes the headroom if the stair is too short\r\n  let headroomTrue = true;\r\n  if (\r\n    totalRise < 84 ||\r\n    idealRise * count < 84 ||\r\n    totalRun < 84 ||\r\n    idealRun * count < 84\r\n  ) {\r\n    headroomTrue = false;\r\n  }\r\n\r\n  //This is the scale factor for the stair drawing\r\n  let windowWidth = \r\n    lgMin.matches \r\n      ? (window.innerWidth * 0.82 - 15)\r\n      : (window.innerWidth);\r\n  let windowHeight = \r\n    lgMin.matches\r\n      ? (window.innerHeight)\r\n      : (window.innerHeight * 0.6);\r\n  let stairLength = (headroomPts[0] + landing + coordinates[0]);\r\n  let wr = windowWidth / (Math.abs(headroomPts[0]) + landing + coordinates[0]);\r\n  let ratio = lgMin.matches ? wr * 0.75 : wr* 0.8;\r\n\r\n  //This transforms the drawing based on the scale factor\r\n  for (var m = 0; m < coordinates.length; m++) {\r\n    coordinates[m] = coordinates[m] * ratio;\r\n  }\r\n  for (var n = 0; n < headroomPts.length; n++) {\r\n    headroomPts[n] = headroomPts[n] * ratio;\r\n  }\r\n  if (props.topStair === false){\r\n    coordinates = coordinates.slice(4, coordinates.length - 4);\r\n  }\r\n\r\n  //This moves the drawing to the center\r\n  let moveCenter = (windowWidth / 2) - (stairLength * ratio) / 2;\r\n  let move = lgMin.matches ? [moveCenter, 150] : [moveCenter - 30, 100];\r\n\r\n  //Treads, risers, and nosing dimensions\r\n  let treadThickness =\r\n    ratio * treadTotal;\r\n  let riserThickness =\r\n    ratio * riserTotal;\r\n  let nosing =\r\n    ratio * nosingTotal;\r\n\r\n  let treadLength = idealRun * ratio + nosing + riserThickness;\r\n  let riserHeight = idealRise * ratio - treadThickness;\r\n\r\n  //Coordinates for treads, risers, and nosing\r\n  let treadsX = [];\r\n  if (props.topStair){\r\n    for (let k = 2; k < coordinates.length; k += 6) {\r\n      treadsX.push(move[0] + coordinates[k] - nosing);\r\n    }\r\n  } else {\r\n    for (let k = 6; k < coordinates.length; k += 6) {\r\n      treadsX.push(move[0] + coordinates[k] - nosing);\r\n    }\r\n  }\r\n  let treadsY = [];\r\n  let risersY = [];\r\n  for (let j = 3; j < coordinates.length; j += 6) {\r\n    treadsY.push(move[1] + coordinates[j]);\r\n    risersY.push(move[1] + coordinates[j] + treadThickness);\r\n  }\r\n  let treadsW = [];\r\n  for (let h = 0; h < treadsX.length; h++) {\r\n    treadsW.push(treadsX[h] + nosing);\r\n  }\r\n\r\n  //Coordinates for all treads minus the top one\r\n  let treadsX2 = [];\r\n  for (let r = 1; r < treadsX.length; r++) {\r\n    treadsX2.push(treadsX[r]);\r\n  }\r\n  let treadsY2 = [];\r\n  for (let t = 1; t < treadsY.length; t++) {\r\n    treadsY2.push(treadsY[t]);\r\n  }\r\n\r\n  let detailCount = props.topStair ? count : count - 1;\r\n\r\n  //Coordinates and dimensions for the top tread\r\n  let topTread = [treadsX[0], treadsY[0]];\r\n\r\n  //This is for the line between the top stair and landing\r\n  let topStairLine = [coordinates[0], coordinates[1], coordinates[0], coordinates[5]];\r\n\r\n  //This is the landing when the top stair is toggled off\r\n  let topStairLanding = [coordinates[2], coordinates[3]];\r\n\r\n  //Dimension strings\r\n  //These are the settings for arrows, text, and stroke width\r\n  let arrowWidth = lgMin.matches ? (10 / 2) : (10 / 4);\r\n  let arrowOffset = lgMin.matches ? 40 : 20;\r\n  let textLineOffset = lgMin.matches ? 25 : 12.5;\r\n  let textNumOffset = lgMin.matches ? 10 : 5;\r\n  let textSize = lgMin.matches ? 12 : 6;\r\n  let strokeWidth = lgMin.matches ? 1.5 : 0.75;\r\n  let strokeDash = lgMin.matches ? [3, 4] : [1, 2];\r\n\r\n\r\n\r\n  //This is the dimension string for the total rise\r\n  let dRise = \r\n    props.topStair ? (\r\n      [\r\n        coordinates[coordinates.length - 2] + arrowOffset,\r\n        0,\r\n        coordinates[coordinates.length - 2] + arrowOffset,\r\n        coordinates[coordinates.length - 9]\r\n      ]\r\n    ):\r\n    (\r\n      [\r\n        coordinates[2] + landing*ratio + arrowOffset,\r\n        0,\r\n        coordinates[2] + landing*ratio + arrowOffset,\r\n        coordinates[coordinates.length - 5]\r\n      ]\r\n    )\r\n\r\n  let dRiseArrowTop = [\r\n    dRise[0] - arrowWidth,\r\n    dRise[1] + arrowWidth,\r\n    dRise[0],\r\n    dRise[1],\r\n    dRise[0] + arrowWidth,\r\n    dRise[1] + arrowWidth\r\n  ];\r\n  let dRiseArrowBot = [\r\n    dRise[2] - arrowWidth,\r\n    dRise[3] - arrowWidth,\r\n    dRise[2],\r\n    dRise[3],\r\n    dRise[2] + arrowWidth,\r\n    dRise[3] - arrowWidth\r\n  ];\r\n  let dRiseText = [dRise[0], (dRise[1] + dRise[3]) / 2];\r\n  let dRiseDashedTop = [\r\n    coordinates[coordinates.length - 2],\r\n    dRise[1],\r\n    dRise[0],\r\n    dRise[1]\r\n  ];\r\n  let dRiseDashedBot = [\r\n    coordinates[coordinates.length - 10],\r\n    dRise[3],\r\n    dRise[0],\r\n    dRise[3]\r\n  ];\r\n\r\n  let dRiseFeet = \r\n\tprops.topStair ? (\r\n\t\tMath.floor(\r\n\t    (coordinates[coordinates.length - 11] - coordinates[1]) / ratio / 12\r\n\t  )\r\n\t):\r\n\t(\r\n\t\tMath.floor(\r\n\t    (coordinates[coordinates.length - 7] - coordinates[1] + (coordinates[7]-coordinates[3])) / ratio / 12\r\n\t  )\r\n  )\r\n  \r\n  let dRiseInches = \r\n\tprops.topStair ? (\r\n\t\tMath.floor(\r\n\t\t  (coordinates[coordinates.length - 11] - coordinates[1]) / ratio -\r\n\t    dRiseFeet * 12\r\n\t\t)\r\n\t):\r\n\t(\r\n\t\tMath.floor(\r\n\t\t  (coordinates[coordinates.length - 7] - coordinates[1] + (coordinates[7]-coordinates[3])) / ratio -\r\n\t    dRiseFeet * 12\r\n\t\t)\r\n  )\r\n  \r\n  let dRiseFraction = \r\n\tprops.topStair ? (\r\n\t\tMath.round(\r\n\t\t  ((coordinates[coordinates.length - 11] - coordinates[1]) / ratio -\r\n\t\t    dRiseFeet * 12 -\r\n\t\t    dRiseInches) *\r\n\t\t    16\r\n\t\t)\r\n\t):\r\n\t(\r\n\t\tMath.round(\r\n\t\t  ((coordinates[coordinates.length - 7] - coordinates[1] + (coordinates[7]-coordinates[3])) / ratio -\r\n\t\t    dRiseFeet * 12 -\r\n\t\t    dRiseInches) *\r\n\t\t    16\r\n\t\t)\r\n  )\r\n\r\n  //These are for the weird dimension string bugs\r\n  if (dRiseFraction === 16){\r\n  \r\n    dRiseInches += 1;\r\n    dRiseFraction = 0;\r\n\r\n    if (dRiseInches === 12){\r\n      dRiseFeet += 1;\r\n      dRiseInches = 0;\r\n    } else if (dRiseInches === 11){\r\n      dRiseFeet += 1;\r\n      dRiseInches = 0;\r\n      dRiseFraction = 0;\r\n    }\r\n\r\n  }\r\n\r\n  let dRiseMM = \r\n\tprops.topStair ? (\r\n\t\tMath.abs(Math.round(((coordinates[coordinates.length - 11] - coordinates[1]) * 25.4) / ratio)) \r\n\t):\r\n\t(\r\n\t\tMath.abs(Math.round(((coordinates[coordinates.length - 7] - coordinates[1] + (coordinates[7]-coordinates[3])) * 25.4) / ratio)) \r\n\t)\r\n  \r\n  let dRiseValue = \r\n    props.units ? (\r\n      dRiseFeet + \"' \" + dRiseInches + '\" ' + dRiseFraction + \"/16\"\r\n    ):\r\n    (\r\n      dRiseMM + \" MM\"\r\n    )\r\n\r\n  //This is the dimension string for the total run\r\n  let dRun = \r\n    props.topStair ? (\r\n      [\r\n        coordinates[coordinates.length - 12],\r\n        coordinates[coordinates.length - 11] + arrowOffset,\r\n        coordinates[0],\r\n        coordinates[coordinates.length - 11] + arrowOffset\r\n      ]\r\n    ):\r\n    (\r\n      [\r\n        coordinates[coordinates.length - 8],\r\n        coordinates[coordinates.length - 7] + arrowOffset,\r\n        coordinates[0],\r\n        coordinates[coordinates.length - 7] + arrowOffset\r\n      ]\r\n    )\r\n\r\n  let dRunArrowLeft = [\r\n    dRun[0] + arrowWidth,\r\n    dRun[1] - arrowWidth,\r\n    dRun[0],\r\n    dRun[1],\r\n    dRun[0] + arrowWidth,\r\n    dRun[1] + arrowWidth\r\n  ];\r\n  let dRunArrowRight = [\r\n    dRun[2] - arrowWidth,\r\n    dRun[3] - arrowWidth,\r\n    dRun[2],\r\n    dRun[3],\r\n    dRun[2] - arrowWidth,\r\n    dRun[3] + arrowWidth\r\n  ];\r\n  let dRunText = [(dRun[0] + dRun[2]) / 2, dRun[1]];\r\n  let dRunDashedLeft = [dRun[0], dRun[1], dRun[0], dRun[1] - arrowOffset];\r\n  let dRunDashedRight = [dRun[2], dRun[3], dRun[2], coordinates[5]];\r\n\r\n  let dRunFeet = \r\n    props.topStair ? (\r\n      Math.floor(\r\n        (coordinates[0] - coordinates[coordinates.length - 12]) / ratio / 12\r\n      )\r\n    ):\r\n    (\r\n      Math.floor(\r\n        (coordinates[0] - coordinates[coordinates.length - 8]) / ratio / 12\r\n      )\r\n    )\r\n\r\n    let dRunInches = \r\n    props.topStair ? (\r\n      Math.floor(\r\n        (coordinates[0] - coordinates[coordinates.length - 12]) / ratio -\r\n        dRunFeet * 12\r\n      )\r\n    ):\r\n    (\r\n      Math.floor(\r\n        (coordinates[0] - coordinates[coordinates.length - 8]) / ratio -\r\n        dRunFeet * 12\r\n      )\r\n    )\r\n\r\n  let dRunFraction = \r\n\tprops.topStair ? (\r\n\t\tMath.round(\r\n\t\t  ((coordinates[0] - coordinates[coordinates.length - 12]) / ratio -\r\n\t\t    dRunFeet * 12 -\r\n\t\t    dRunInches) *\r\n\t\t    16\r\n\t\t)\r\n\t):\r\n\t(\r\n\t\tMath.round(\r\n\t\t  ((coordinates[0] - coordinates[coordinates.length - 8]) / ratio -\r\n\t\t    dRunFeet * 12 -\r\n\t\t    dRunInches) *\r\n\t\t    16\r\n\t\t)\r\n  )\r\n\r\n  //These are for the weird dimension string bugs\r\n  if (dRunFraction === 16){\r\n  \r\n    dRunInches += 1;\r\n    dRunFraction = 0;\r\n\r\n    if (dRunInches === 12){\r\n      dRunFeet += 1;\r\n      dRunInches = 0;\r\n    } else if (dRunInches === 11){\r\n      dRunFeet += 1;\r\n      dRunInches = 0;\r\n      dRunFraction = 0;\r\n    }\r\n\r\n  }\r\n  \r\n  let dRunMM = \r\n    props.topStair ? (\r\n      Math.abs(Math.round(\r\n        ((coordinates[0] - coordinates[coordinates.length - 12]) * 25.4) / ratio))\r\n    ):\r\n    (\r\n      Math.abs(Math.round(\r\n        ((coordinates[0] - coordinates[coordinates.length - 8]) * 25.4 / ratio)))\r\n    )\r\n\r\n  let dRunValue =\r\n    props.units ? (\r\n      dRunFeet + \"' \" + dRunInches + '\" ' + dRunFraction + \"/16\"\r\n    ):\r\n    (\r\n      dRunMM + \" MM\"\r\n    )\r\n\r\n  //This is the dimension string for the stringer\r\n  let sZ =\r\n    (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) * ratio;\r\n  let sA = stringerA * ratio;\r\n  let sAlpha = Math.atan(idealRise / idealRun);\r\n  let sC = Math.sqrt(sA * sA - sZ * sZ);\r\n\r\n  let sX = props.details ? (coordinates[10] + riserThickness) : (coordinates[10]);\r\n  let sY = props.details ? (coordinates[11] + treadThickness) : (coordinates[11]);\r\n\r\n  if (count <= 3) {\r\n    sX = coordinates[4] + riserThickness;\r\n    sY = coordinates[5] + treadThickness;\r\n  }\r\n\r\n  if (props.topStair === false){\r\n    sY += (idealRise * ratio);\r\n  }\r\n\r\n  let stringerTrue = count > 2;\r\n\r\n  let sX1 = sX + sC * Math.cos(sAlpha);\r\n  let sY1 = sY + sA - sC * Math.sin(sAlpha);\r\n  let dStringer = [sX, sY, sX1 + sZ / 2, sY1 + sA / 2];\r\n  let dStringerValue = \r\n    props.units ? (\r\n      props.stringerin + '\" ' + Math.round(props.stringerfr * 16) + \"/16\"\r\n    ):\r\n    (\r\n      Math.round(stringerTotal * 25.4) + \" MM\"\r\n    )\r\n\r\n  //This is the dimension string for the nosing\r\n  let dNosing = \r\n    props.topStair ? (\r\n      [coordinates[2], 0, coordinates[2] - nosing, 0] \r\n    ):\r\n    ( \r\n      [coordinates[4], idealRise*ratio, coordinates[4] - nosing, idealRise*ratio]\r\n    )\r\n  let dNosingDashedLeft = [\r\n    dNosing[0],\r\n    dNosing[1],\r\n    dNosing[0],\r\n    dNosing[1] - arrowOffset\r\n  ];\r\n  let dNosingDashedRight = [\r\n    dNosing[2],\r\n    dNosing[1],\r\n    dNosing[2],\r\n    dNosing[1] - arrowOffset\r\n  ];\r\n  let dNosingText = [(dNosing[0] + dNosing[2]) / 2, dNosing[1] - (textSize * 2.5)];\r\n  let dNosingValue = \r\n    props.units ? (\r\n      props.nosingin + '\" ' + props.nosingfr * 16 + \"/16\"\r\n    ):\r\n    (\r\n      Math.round(nosingTotal * 25.4) + \" MM\"\r\n    )\r\n\r\n  //This is the dimension string for the headroom\r\n  let dHeadroomStepX = headroomPts[6];\r\n  let dHeadroomStepY = props.topStair ? coordinates[coordinates.length - 9] : coordinates[coordinates.length - 5];\r\n  for (var p = 0; p < coordinates.length; p += 2) {\r\n    if (\r\n      dHeadroomStepX > coordinates[p + 2] &&\r\n      dHeadroomStepX < coordinates[p - 2]\r\n    ) {\r\n      dHeadroomStepY = coordinates[p + 1];\r\n    }\r\n  }\r\n\r\n  let dHeadroomDashed = \r\n    props.topStair ?\r\n      [\r\n        dHeadroomStepX,\r\n        coordinates[coordinates.length - 9],\r\n        coordinates[coordinates.length - 10],\r\n        coordinates[coordinates.length - 9]\r\n      ]\r\n  :\r\n      [\r\n        dHeadroomStepX,\r\n        coordinates[coordinates.length - 5],\r\n        coordinates[coordinates.length - 6],\r\n        coordinates[coordinates.length - 5]\r\n      ]\r\n\r\n  let headroomBoolean = false;\r\n  if (dHeadroomStepX < coordinates[coordinates.length - 10]) {\r\n    headroomBoolean = true;\r\n  }\r\n\r\n  let dHeadroom = [\r\n    dHeadroomStepX,\r\n    headroomPts[7],\r\n    dHeadroomStepX,\r\n    dHeadroomStepY\r\n  ];\r\n  let dHeadroomArrowTop = [\r\n    dHeadroom[0] - arrowWidth,\r\n    dHeadroom[1] + arrowWidth,\r\n    dHeadroom[0],\r\n    dHeadroom[1],\r\n    dHeadroom[0] + arrowWidth,\r\n    dHeadroom[1] + arrowWidth\r\n  ];\r\n  let dHeadroomArrowBot = [\r\n    dHeadroom[2] - arrowWidth,\r\n    dHeadroom[3] - arrowWidth,\r\n    dHeadroom[2],\r\n    dHeadroom[3],\r\n    dHeadroom[2] + arrowWidth,\r\n    dHeadroom[3] - arrowWidth\r\n  ];\r\n\r\n  let dHeadroomText = [dHeadroom[0], (dHeadroom[1] + dHeadroom[3]) / 2];\r\n  let dHeadroomValue =\r\n    ((parseFloat(dHeadroomStepY) - parseFloat(dHeadroom[1])) / ratio).toFixed(2);\r\n  let dHeadroomFeet = Math.floor(\r\n      (dHeadroomStepY - dHeadroom[1]) / ratio / 12\r\n  );\r\n  let dHeadroomInches = Math.floor(\r\n    (dHeadroomStepY - dHeadroom[1]) / ratio - dHeadroomFeet * 12\r\n  );\r\n\r\n  let dHeadroomFraction =\r\n    Math.round(\r\n      (dHeadroomStepY - dHeadroom[1]) / ratio -\r\n        dHeadroomFeet * 12 -\r\n        dHeadroomInches\r\n    ) * 16;\r\n  let dHeadroomValueText = \r\n    props.units ? (\r\n      dHeadroomFeet + \"' \" + dHeadroomInches + '\" ' + dHeadroomFraction + \"/16\"\r\n    ):\r\n    (\r\n      Math.round(((dHeadroomStepY - dHeadroom[1]) * 25.4) / ratio) + \" MM\"\r\n    )\r\n\r\n  //These are for the weird dimension string bugs\r\n  if (dHeadroomFraction === 16){\r\n  \r\n    dHeadroomInches += 1;\r\n    dHeadroomFraction = 0;\r\n\r\n    if (dHeadroomInches === 12){\r\n      dHeadroomFeet += 1;\r\n      dHeadroomInches = 0;\r\n    } else if (dHeadroomInches === 11){\r\n      dHeadroomFeet += 1;\r\n      dHeadroomInches = 0;\r\n      dHeadroomFraction = 0;\r\n    }\r\n\r\n  }\r\n\r\n  //This is the dimension string for the floor thickness\r\n  let dFloor = [headroomPts[6], headroomPts[7], headroomPts[4], headroomPts[5]];\r\n  let dFloorArrowTop = [\r\n    dFloor[2] - arrowWidth,\r\n    dFloor[3] + arrowWidth,\r\n    dFloor[2],\r\n    dFloor[3],\r\n    dFloor[2] + arrowWidth,\r\n    dFloor[3] + arrowWidth\r\n  ];\r\n  let dFloorArrowBot = [\r\n    dFloor[0] - arrowWidth,\r\n    dFloor[1] - arrowWidth,\r\n    dFloor[0],\r\n    dFloor[1],\r\n    dFloor[0] + arrowWidth,\r\n    dFloor[1] - arrowWidth\r\n  ];\r\n  let dFloorText = [dFloor[2], dFloor[3]];\r\n  let dFloorDashedTop = [\r\n    dFloor[2],\r\n    dFloor[3],\r\n    dFloor[2] + arrowOffset,\r\n    dFloor[3]\r\n  ];\r\n  let dFloorDashedBot = [\r\n    dFloor[0],\r\n    dFloor[1],\r\n    dFloor[0] + arrowOffset,\r\n    dFloor[1]\r\n  ];\r\n  let dFloorValue = \r\n    props.units ? (\r\n      props.floorft / 12 + \"' \" + props.floorin + '\" ' + props.floorfr * 16 + \"/16\"\r\n    ):\r\n    (\r\n      Math.round(floorThickness * 25.4) + \" MM\"\r\n    )\r\n\r\n  //This is the dimension string for the stair angle\r\n  let dAngleStart = \r\n    props.topStair ?\r\n      [\r\n        coordinates[coordinates.length - 12],\r\n        coordinates[coordinates.length - 11]\r\n      ]\r\n    :\r\n      [\r\n        coordinates[coordinates.length - 8],\r\n        coordinates[coordinates.length - 7]\r\n      ]\r\n  \r\n  let dAngle = [\r\n    dAngleStart[0],\r\n    dAngleStart[1],\r\n    dAngleStart[0] - idealRun * ratio,\r\n    dAngleStart[1],\r\n    dAngleStart[0],\r\n    dAngleStart[1] - idealRise * ratio\r\n  ];\r\n\r\n  let dAngleText = \r\n    props.topStair ?\r\n      [\r\n        coordinates[coordinates.length - 10] + (idealRun / 2) * ratio,\r\n        dAngle[1]\r\n      ]\r\n    :\r\n    [\r\n      coordinates[coordinates.length - 6] + (idealRun / 2) * ratio,\r\n      dAngle[1]\r\n    ]\r\n\r\n  let stairAngle = (Math.atan(idealRise / idealRun) * (180 / Math.PI)).toFixed(2)\r\n\r\n  if (stairAngle < 30 || count <= 3) {\r\n    if (props.topStair){\r\n      dAngleText = [\r\n        coordinates[coordinates.length - 10] + (idealRun / 2) * ratio + 10,\r\n        dAngle[1]\r\n      ];\r\n    } else {\r\n      dAngleText = [\r\n        coordinates[coordinates.length - 6] + (idealRun / 2) * ratio + 10,\r\n        dAngle[1]\r\n      ];\r\n    }\r\n  }\r\n\r\n  //These are coordinates for the rise and run dimension text\r\n  let dStep = \r\n    props.topStair ? (\r\n      [coordinates[coordinates.length - 2], coordinates[coordinates.length - 11]]\r\n    ): \r\n    (\r\n      [coordinates[2] + landing*ratio, coordinates[coordinates.length - 7]]\r\n    );\r\n\r\n  let runCount = props.topStair ? (count) : (count - 1);\r\n\r\n  let idealRunParsedIn = \r\n    props.topStair ? (\r\n      Math.floor((coordinates[12] - coordinates[14]) / ratio)\r\n    ):\r\n    (\r\n      Math.floor((coordinates[6] - coordinates[10]) / ratio)\r\n    )\r\n\r\n  let idealRunParsedFr = \r\n    props.topStair ? (\r\n      Math.round((((coordinates[12] - coordinates[14]) / ratio) - idealRunParsedIn) * 0.0625)\r\n    ):\r\n    (\r\n      Math.round((((coordinates[6] - coordinates[10]) / ratio) - idealRunParsedIn) * 0.0625)\r\n    )\r\n\r\n  let idealRunParsedMM = \r\n    props.topStair ? (\r\n      Math.round(((coordinates[12] - coordinates[14]) / ratio) * 25.4)\r\n    ):\r\n    (\r\n      Math.round(((coordinates[6] - coordinates[10]) / ratio) * 25.4)\r\n    )\r\n\r\n  let idealRiseParsedIn = \r\n    props.topStair ? (\r\n      Math.floor((coordinates[11] - coordinates[7]) / ratio)\r\n    ):\r\n    (\r\n      Math.floor((coordinates[15] - coordinates[11]) / ratio)\r\n    )\r\n\r\n  let idealRiseParsedFr =\r\n    props.topStair ? (\r\n      Math.round((((coordinates[11] - coordinates[7]) / ratio) - idealRunParsedIn) * 0.0625)\r\n    ):\r\n    (\r\n      Math.round((((coordinates[15] - coordinates[11]) / ratio) - idealRunParsedIn) * 0.0625)\r\n    )\r\n\r\n  let idealRiseParsedMM = \r\n    props.topStair ? (\r\n      Math.round(((coordinates[11] - coordinates[7]) / ratio) * 25.4)\r\n    ):\r\n    (\r\n      Math.round(((coordinates[15] - coordinates[11]) / ratio) * 25.4)\r\n    )\r\n\r\n  let riseCountValue = \r\n      props.units ? (\r\n        runCount + \" rises at \" + idealRiseParsedIn + '\" ' + idealRiseParsedFr + \"/16\"\r\n      ):\r\n      (\r\n        runCount + \" rises at \" + idealRiseParsedMM + \" MM\"\r\n      )\r\n\r\n  let runCountValue = \r\n      props.units ? (\r\n        runCount + \" runs at \" + idealRunParsedIn + '\" ' + idealRunParsedFr + \"/16\"\r\n      ):\r\n      (\r\n        runCount + \" runs at \" + idealRunParsedMM + \" MM\"\r\n      )\r\n\r\n  //Error message texts\r\n  let errors = [];\r\n  let ePosition = \r\n    lgMin.matches ? (\r\n      [80, 80]\r\n    ):\r\n    (\r\n      [8, 40]\r\n    )\r\n\r\n  //Headroom errors\r\n  let eHeadroomText = \"\";\r\n  let eHeadroomColor = \"#ff0000\";\r\n  if (dHeadroomValue < 84 && headroomTrue) {\r\n    eHeadroomColor = \"#ff0000\";\r\n    eHeadroomText = \"Low Headroom\";\r\n    errors.push(eHeadroomText);\r\n  } else {\r\n    eHeadroomColor = \"#5541EA\";\r\n  }\r\n\r\n  //Run length errors\r\n  let withNosing = false;\r\n  if (idealRun === 10 && props.nosingin === 0) {\r\n    withNosing = true;\r\n  }\r\n  let eRunText = \"\";\r\n  if (idealRun < 10 && withNosing) {\r\n    eRunText = 'Stair run is short';\r\n    errors.push(eRunText);\r\n  }\r\n\r\n  //Stair angle errors\r\n  let eAngleText = \"\";\r\n  let eAngleColor = \"#5541EA\";\r\n  if (stairAngle > 42 || stairAngle < 30) {\r\n    eAngleText = \"Angle must be between 30° and 42°\";\r\n    eAngleColor = \"#ff0000\";\r\n    errors.push(eAngleText);\r\n  }\r\n\r\n  //Rise error\r\n  let eRiseText = \"\";\r\n  if (idealRise > 7){\r\n    eRiseText = 'Stair rise is steep'\r\n    errors.push(eRiseText);\r\n  }\r\n\r\n  //Compiled error messages\r\n  let eMessage = \"\";\r\n  if (errors.length === 1) {\r\n    eMessage = errors[0];\r\n  } else if (errors.length === 2) {\r\n    eMessage = errors[0] + \" • \" + errors[1];\r\n  } else if (errors.length === 3) {\r\n    eMessage = errors[0] + \" • \" + errors[1] + \" • \" + errors[2];\r\n  } else if (errors.length === 4) {\r\n    eMessage = errors[0] + \" • \" + errors[1] + \" • \" + errors[2] + \" • \" + errors[3];\r\n  }\r\n  \r\n\r\n  return (\r\n    <Stage width={windowWidth} height={windowHeight}>\r\n      <Layer>\r\n        {props.topStair === false && (\r\n          <Rect\r\n            x={move[0] + topStairLanding[0]}\r\n            y={move[1] + topStairLanding[1] - (idealRise * ratio)}\r\n            width={landing * ratio}\r\n            height={floorThickness * ratio}\r\n            fill=\"white\"\r\n            stroke=\"black\"\r\n            strokeWidth={strokeWidth}\r\n          />\r\n        )}\r\n        {props.topStair && (\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={topStairLine}\r\n            stroke=\"black\"\r\n            strokeWidth={strokeWidth}\r\n            lineCap=\"sqare\"\r\n            lineJoin=\"sqare\"\r\n            closed=\"true\"\r\n          />\r\n        )}\r\n        {props.dimensions && (\r\n          <Text\r\n            x={ePosition[0]}\r\n            y={ePosition[1]}\r\n            fontFamily=\"Sohne Mono Buch\"\r\n            fontSize={textSize}\r\n            fill=\"#ff0000\"\r\n            text={eMessage}\r\n            align=\"left\"\r\n          />\r\n        )}\r\n        <Line\r\n          x={move[0]}\r\n          y={move[1]}\r\n          points={coordinates}\r\n          stroke=\"black\"\r\n          strokeWidth={strokeWidth}\r\n          lineCap=\"sqare\"\r\n          lineJoin=\"sqare\"\r\n          closed=\"true\"\r\n        />\r\n        {headroomTrue && (\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={headroomPts}\r\n            stroke=\"black\"\r\n            strokeWidth={strokeWidth}\r\n            lineCap=\"sqare\"\r\n            lineJoin=\"sqare\"\r\n            closed=\"true\"\r\n          />\r\n        )}\r\n        {props.details && (\r\n          <Rect\r\n            x={topTread[0]}\r\n            y={topTread[1]}\r\n            width={treadLength - riserThickness}\r\n            height={treadThickness}\r\n            fill=\"white\"\r\n            stroke=\"black\"\r\n            strokeWidth={strokeWidth}\r\n          />\r\n        )}\r\n        {props.details &&\r\n          [...Array(detailCount - 1)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsX2[i]}\r\n              y={treadsY2[i]}\r\n              width={treadLength}\r\n              height={treadThickness}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={strokeWidth}\r\n            />\r\n          ))}\r\n        {props.details &&\r\n          [...Array(detailCount)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsW[i]}\r\n              y={risersY[i]}\r\n              width={riserThickness}\r\n              height={riserHeight}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={strokeWidth}\r\n            />\r\n          ))}\r\n      </Layer>\r\n      <Layer>\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRise}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseArrowTop}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseArrowBot}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseDashedTop}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseDashedBot}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRiseText[0] - textNumOffset}\r\n              y={move[1] + dRiseText[1] - 75}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Total Rise\"\r\n              rotation={90}\r\n              align=\"center\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRiseText[0] - textLineOffset}\r\n              y={move[1] + dRiseText[1] - 75}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={\r\n                dRiseValue\r\n              }\r\n              rotation={90}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRun}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunArrowLeft}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunArrowRight}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunDashedLeft}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunDashedRight}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRunText[0] - 75}\r\n              y={move[1] + dRunText[1] + textNumOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Total Run\"\r\n              align=\"center\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRunText[0] - 75}\r\n              y={move[1] + dRunText[1] + textLineOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={dRunValue}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && props.details && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dNosingDashedLeft}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dNosingDashedRight}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dNosingText[0] - 75}\r\n              y={move[1] + dNosingText[1] - textSize - textLineOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Nosing\"\r\n              align=\"center\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dNosingText[0] - 75}\r\n              y={move[1] + dNosingText[1] - textSize - textNumOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={dNosingValue}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && headroomTrue && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dFloorDashedTop}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dFloorDashedBot}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Line\r\n              x={move[0] + arrowOffset}\r\n              y={move[1]}\r\n              points={dFloorArrowTop}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0] + arrowOffset}\r\n              y={move[1]}\r\n              points={dFloorArrowBot}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0] + arrowOffset}\r\n              y={move[1]}\r\n              points={dFloor}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + arrowOffset / 2 + dFloor[2] + arrowOffset}\r\n              y={move[1] + dFloorText[1]}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Floor thickness\"\r\n              align=\"left\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + arrowOffset / 2 + dFloor[2] + arrowOffset}\r\n              y={move[1] + dFloorText[1] + textSize + 2}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={dFloorValue}\r\n              align=\"left\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Text\r\n              width={100}\r\n              x={move[0] + dAngleText[0] + (textSize + 2)}\r\n              y={move[1] + dAngleText[1] - (textSize + 2)}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill={eAngleColor}\r\n              text={stairAngle + \"°\"}\r\n              align=\"left\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && headroomTrue && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dHeadroom}\r\n              stroke={eHeadroomColor}\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dHeadroomArrowTop}\r\n              stroke={eHeadroomColor}\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dHeadroomArrowBot}\r\n              stroke={eHeadroomColor}\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Text\r\n              width={100}\r\n              x={move[0] + dHeadroomText[0] - textLineOffset}\r\n              y={move[1] + dHeadroomText[1] - 50}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill={eHeadroomColor}\r\n              text={dHeadroomValueText}\r\n              align=\"center\"\r\n              rotation={90}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dHeadroomText[0] - textNumOffset}\r\n              y={move[1] + dHeadroomText[1] - 75}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill={eHeadroomColor}\r\n              text=\"Headroom height\"\r\n              align=\"center\"\r\n              rotation={90}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && headroomTrue && headroomBoolean && (\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={dHeadroomDashed}\r\n            stroke=\"black\"\r\n            strokeWidth={0.75}\r\n            lineCap=\"sqare\"\r\n            lineJoin=\"sqare\"\r\n            dash={strokeDash}\r\n          />\r\n        )}\r\n        {props.dimensions && stringerTrue && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dStringer}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dStringer[2]}\r\n              y={move[1] + dStringer[3]}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Stringer width\"\r\n              align=\"left\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dStringer[2]}\r\n              y={move[1] + dStringer[3] + textSize + 2}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={dStringerValue}\r\n              align=\"left\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Text\r\n              width={200}\r\n              x={move[0] + dStep[0] - 200}\r\n              y={move[1] + dStep[1] + (textSize / 2)}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={runCountValue}\r\n              align=\"right\"\r\n            />\r\n            <Text\r\n              width={200}\r\n              x={move[0] + dStep[0] - 200}\r\n              y={move[1] + dStep[1] + (textSize / 2) + textSize + 2}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={riseCountValue}\r\n              align=\"right\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n};\r\n\r\nexport default Stair;\r\n","import React from 'react';\r\n\r\nconst Units = (props) => {\r\n\r\n    let unitsTrue = props.units;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Units</div>\r\n            {unitsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeUnitsIn}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeUnitsMM}>MM</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeUnitsIn}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeUnitsMM}>MM</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Units","import React from 'react';\r\n\r\nconst Dimensions = (props) => {\r\n    \r\n    let dimensionsTrue = props.dimensions;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Dimensions</div>\r\n            {dimensionsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeDimensionsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeDimensionsOff}>OFF</button>\r\n                </div>\r\n        ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeDimensionsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeDimensionsOff}>OFF</button>\r\n                </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dimensions","import React from 'react';\r\n\r\nconst DetailsToggle = (props) => {\r\n    \r\n    let detailsTrue = props.details;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Treads & Risers</div>\r\n            {detailsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeDetailsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeDetailsOff}>OFF</button>\r\n                </div>\r\n        ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeDetailsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeDetailsOff}>OFF</button>\r\n                </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsToggle","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Styles/App.css\";\nimport TotalRun from \"./Components/inputs/totalrun\";\nimport TotalRise from \"./Components/inputs/totalrise\";\nimport IdealRun from \"./Components/inputs/idealrun\";\nimport IdealRise from \"./Components/inputs/idealrise\";\nimport TopStair from \"./Components/inputs/topstair\";\nimport Details from \"./Components/inputs/details\";\nimport StairAngle from \"./Components/inputs/stairangle\";\nimport Height from \"./Components/inputs/height\";\nimport FloorThickness from \"./Components/inputs/floorthickness\";\nimport Stair from \"./Components/stair\";\nimport Units from \"./Components/inputs/units\";\nimport Dimensions from \"./Components/inputs/dimensions\";\nimport DetailsToggle from \"./Components/inputs/detailsToggle\";\n\nclass App extends Component {\n  state = {\n    totalRunft: 12 * 12,\n    totalRunin: 0,\n    totalRunfr: 0,\n    totalRunmm: 144 * 25.4,\n\n    totalRiseft: 7 * 12,\n    totalRisein: 7,\n    totalRisefr: 0,\n    totalRisemm: 91 * 25.4,\n\n    idealRisein: 7,\n    idealRisefr: 0,\n    idealRisemm: 7 * 25.4,\n\n    idealRunin: 11,\n    idealRunfr: 0,\n    idealRunmm: 11 * 25.4,\n\n    stringerin: 5,\n    stringerfr: 0.0625 * 15,\n    stringermm: (5 + (0.0625 * 15)) * 25.4,\n\n    floorft: 0,\n    floorin: 7,\n    floorfr: 0,\n    floormm: 7 * 25.4,\n\n    headroomMax: 0,\n    headroomLength: 0,\n\n    treadin: 1,\n    treadfr: 0,\n    treadmm: 1 * 25.4,\n\n    riserin: 1,\n    riserfr: 0,\n    risermm: 1 * 25.4,\n\n    nosingin: 0,\n    nosingfr: 0.0625 * 8,\n    nosingmm: 0.0625 * 8 * 25.4,\n\n    stairAngle: 32.5,\n    stairToggle: false,\n\n    runOn: true,\n    idealOn: false,\n    dimensions: true,\n    units: true,\n    details: true,\n    topStair: true\n  };\n\n  //Handlers for changing total run\n  changetotalRunft = event => {\n    this.setState({\n      totalRunft: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRunin = event => {\n    this.setState({\n      totalRunin: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRunfr = event => {\n    this.setState({\n      totalRunfr: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRunmm = event => {\n    this.setState({\n      totalRunmm: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    })\n  }\n  \n  //Handlers for changing total rise\n  changetotalRiseft = event => {\n    this.setState({\n      totalRiseft: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRisein = event => {\n    this.setState({\n      totalRisein: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRisefr = event => {\n    this.setState({\n      totalRisefr: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRisemm = event => {\n    this.setState({\n      totalRisemm: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n\n  //Handlers for changing ideal run\n  changeidealRunin = event => {\n    this.setState({\n      idealRunin: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n  changeidealRunfr = event => {\n    this.setState({\n      idealRunfr: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n  changeidealRunmm = event => {\n    this.setState({\n      idealRunmm: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n\n  //Handlers for changing ideal rise\n  changeidealRisein = event => {\n    this.setState({\n      idealRisein: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n  changeidealRisefr = event => {\n    this.setState({\n      idealRisefr: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n  changeidealRisemm = event => {\n    this.setState({\n      idealRisemm: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n\n  //Handlers for changing stringer\n  changestringerin = event => {\n    this.setState({ stringerin: event.target.value });\n  };\n\n  changestringerfr = event => {\n    this.setState({ stringerfr: event.target.value });\n  };\n  changestringermm = event => {\n    this.setState({ stringermm: event.target.value });\n  };\n\n  //Handlers for changing floor thickness\n  changefloorft = event => {\n    this.setState({ floorft: event.target.value });\n  };\n\n  changefloorin = event => {\n    this.setState({ floorin: event.target.value });\n  };\n\n  changefloorfr = event => {\n    this.setState({ floorfr: event.target.value });\n  };\n  changefloormm = event => {\n    this.setState({ floormm: event.target.value });\n  };\n\n  //Handlers for headroom\n  changeheadroomlength = event => {\n    this.setState({\n      headroomLength: event.target.value\n    });\n  };\n\n  //Handlers for tread\n  changetreadin = event => {\n    this.setState({\n      treadin: event.target.value\n    });\n  };\n  changetreadfr = event => {\n    this.setState({\n      treadfr: event.target.value\n    });\n  };\n  changetreadmm = event => {\n    this.setState({\n      treadmm: event.target.value\n    });\n  };\n\n  //Handlers for riser\n  changeriserin = event => {\n    this.setState({\n      riserin: event.target.value\n    });\n  };\n  changeriserfr = event => {\n    this.setState({\n      riserfr: event.target.value\n    });\n  };\n  changerisermm = event => {\n    this.setState({\n      risermm: event.target.value\n    });\n  };\n\n  //Handlers for nosing\n  changenosingin = event => {\n    this.setState({\n      nosingin: event.target.value\n    });\n  };\n  changenosingfr = event => {\n    this.setState({\n      nosingfr: event.target.value\n    });\n  };\n  changenosingmm = event => {\n    this.setState({\n      nosingmm: event.target.value\n    });\n  };\n\n  //Handlers for toggles\n  changeUnitsIn = () => {\n    this.setState({\n      units: true\n    });\n  };\n  changeUnitsMM = () => {\n    this.setState({\n      units: false\n    });\n  };\n  changeDimensionsOn = () => {\n    this.setState({\n      dimensions: true\n    });\n  };\n  changeDimensionsOff = () => {\n    this.setState({\n      dimensions: false\n    });\n  };\n  changeDetailsOn = () => {\n    this.setState({\n      details: true\n    });\n  };\n  changeDetailsOff = () => {\n    this.setState({\n      details: false\n    });\n  };\n  changeTopStairOn = () => {\n    this.setState({\n      topStair: true\n    })\n  }\n  changeTopStairOff = () => {\n    this.setState({\n      topStair: false\n    })\n  }\n\n\n  //Handler for stair angle\n  changeStairAngle = event => {\n    this.setState({\n      stairToggle: true,\n      stairAngle: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div id=\"sidebar\" className=\"col-12 col-lg-2\">\n            <div className=\"sidebar__section sidebar__section--first\">\n              <div className=\"title\">Toggles</div>\n              <Units\n                units={this.state.units}\n                changeUnitsIn={this.changeUnitsIn}\n                changeUnitsMM={this.changeUnitsMM}\n              />\n              <Dimensions\n                dimensions={this.state.dimensions}\n                changeDimensionsOn={this.changeDimensionsOn}\n                changeDimensionsOff={this.changeDimensionsOff}\n              />\n              <DetailsToggle\n                details={this.state.details}\n                changeDetailsOn={this.changeDetailsOn}\n                changeDetailsOff={this.changeDetailsOff}\n              />\n              <TopStair\n                topStair={this.state.topStair}\n                changeTopStairOn={this.changeTopStairOn}\n                changeTopStairOff={this.changeTopStairOff}\n              />\n            </div>\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <div className=\"sidebar__section sidebar__section--second\">\n              <div className=\"title\">Rise-run</div>\n              <TotalRun\n                totalRunft={this.state.totalRunft}\n                totalRunin={this.state.totalRunin}\n                totalRunfr={this.state.totalRunfr}\n                totalRunmm={this.state.totalRunmm}\n                changetotalRunft={this.changetotalRunft}\n                changetotalRunin={this.changetotalRunin}\n                changetotalRunfr={this.changetotalRunfr}\n                changetotalRunmm={this.changetotalRunmm}\n                changetotalRunSwitchOn={this.changetotalRunSwitchOn}\n                changetotalRunSwitchOff={this.changetotalRunSwitchOff}\n                units={this.state.units}\n              />\n              <TotalRise\n                totalRiseft={this.state.totalRiseft}\n                totalRisein={this.state.totalRisein}\n                totalRisefr={this.state.totalRisefr}\n                totalRisemm={this.state.totalRisemm}\n                changetotalRiseft={this.changetotalRiseft}\n                changetotalRisein={this.changetotalRisein}\n                changetotalRisefr={this.changetotalRisefr}\n                changetotalRisemm={this.changetotalRisemm}\n                units={this.state.units}\n                topStair={this.state.topStair}\n              />\n              <IdealRun\n                idealRunin={this.state.idealRunin}\n                idealRunfr={this.state.idealRunfr}\n                idealRunmm={this.state.idealRunmm}\n                changeidealRunin={this.changeidealRunin}\n                changeidealRunfr={this.changeidealRunfr}\n                changeidealRunmm={this.changeidealRunmm}\n                units={this.state.units}\n              />\n              <IdealRise\n                idealRisein={this.state.idealRisein}\n                idealRisefr={this.state.idealRisefr}\n                idealRisemm={this.state.idealRisemm}\n                changeidealRisein={this.changeidealRisein}\n                changeidealRisefr={this.changeidealRisefr}\n                changeidealRisemm={this.changeidealRisemm}\n                units={this.state.units}\n              />\n            </div>\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <Details\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              treadmm={this.state.treadmm}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              risermm={this.state.risermm}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n              nosingmm={this.state.nosingmm}\n              changetreadin={this.changetreadin}\n              changetreadfr={this.changetreadfr}\n              changetreadmm={this.changetreadmm}\n              changeriserin={this.changeriserin}\n              changeriserfr={this.changeriserfr}\n              changerisermm={this.changerisermm}\n              changenosingin={this.changenosingin}\n              changenosingfr={this.changenosingfr}\n              changenosingmm={this.changenosingmm}\n              changestringerin={this.changestringerin}\n              changestringerfr={this.changestringerfr}\n              changestringermm={this.changestringermm}\n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              stringermm={this.state.stringermm}\n              details={this.state.details}\n              units={this.state.units}\n            />\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <div className=\"sidebar__section sidebar__section--fourth\">\n              <div className=\"title\">Headroom</div>\n              <Height\n                totalRunft={this.state.totalRunft}\n                totalRunin={this.state.totalRunin}\n                totalRunfr={this.state.totalRunfr}\n                totalRunmm={this.state.totalRunmm}\n                headroomLength={this.state.headroomLength}\n                changeheadroomlength={this.changeheadroomlength}\n                units={this.state.units}\n              />\n              <FloorThickness\n                floorft={this.state.floorft}\n                floorin={this.state.floorin}\n                floorfr={this.state.floorfr}\n                floormm={this.state.floormm}\n                changefloorft={this.changefloorft}\n                changefloorin={this.changefloorin}\n                changefloorfr={this.changefloorfr}\n                changefloormm={this.changefloormm}\n                units={this.state.units}\n              />\n            </div>\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <StairAngle\n              idealRunin={this.state.idealRunin}\n              idealRunfr={this.state.idealRunfr}\n              idealRisein={this.state.idealRisein}\n              idealRisefr={this.state.idealRisefr}\n              changeStairAngle={this.changeStairAngle}\n              stairAngle={this.state.stairAngle}\n            />\n          </div>\n\n          <div id=\"container\" className=\"col-12 col-lg-10\">\n            <Stair\n              units={this.state.units}\n              totalRunft={this.state.totalRunft}\n              totalRunin={this.state.totalRunin}\n              totalRunfr={this.state.totalRunfr}\n              totalRunmm={this.state.totalRunmm}\n              totalRiseft={this.state.totalRiseft}\n              totalRisein={this.state.totalRisein}\n              totalRisefr={this.state.totalRisefr}\n              totalRisemm={this.state.totalRisemm}\n              idealRunin={this.state.idealRunin}\n              idealRunfr={this.state.idealRunfr}\n              idealRunmm={this.state.idealRunmm}\n              idealRisein={this.state.idealRisein}\n              idealRisefr={this.state.idealRisefr}\n              idealRisemm={this.state.idealRisemm}\n              totalBoolean={this.state.runOn}\n              runCount={this.state.runCount}\n              riseCount={this.state.riseCount}\n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              stringermm={this.state.stringermm}\n              floorft={this.state.floorft}\n              floorin={this.state.floorin}\n              floorfr={this.state.floorfr}\n              floormm={this.state.floormm}\n              headroomLength={this.state.headroomLength}\n              headroomDelta={this.state.headroomDelta}\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              treadmm={this.state.treadmm}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              risermm={this.state.risermm}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n              nosingmm={this.state.nosingmm}\n              details={this.state.details}\n              dimensions={this.state.dimensions}\n              stairAngle={this.state.stairAngle}\n              stairToggle={this.state.stairToggle}\n              idealBoolean={this.state.idealOn}\n              topStair={this.state.topStair}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.scss\";\nimport \"./Styles/fonts.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport WebFont from \"webfontloader\";\n\nfunction initApp() {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n}\n\nWebFont.load({\n  custom: {\n    families: [\"Sohne Mono Buch\"]\n  },\n  active: () => {\n    initApp();\n  }\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}